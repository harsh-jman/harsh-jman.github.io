{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-14T09:43:45.154356Z", "invocation_id": "4c287b54-c1dc-43b7-b472-9a803374ad8a", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.673954Z", "completed_at": "2024-04-14T09:43:43.742064Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.750851Z", "completed_at": "2024-04-14T09:43:43.751585Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0825662612915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_approverdetails", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        \"_id\" AS APPROVER_DETAIL_ID,\n        \"userId\" AS USER_ID,\n        \"approverUserId\" AS APPROVER_USER_ID,\n        \"userSkillId\" AS USER_SKILL_ID,\n        \"status\" AS STATUS,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS UPDATED_AT,\n        CASE WHEN \"comments\" IS NOT NULL THEN \"comments\" ELSE NULL END AS COMMENTS,\n        TRY_CAST(\"rating\" AS FLOAT) AS RATING -- Try to cast rating to FLOAT\n    FROM\n        FINALPROJECTPROD.RAW.APPROVERDETAILS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_approverdetails"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.760617Z", "completed_at": "2024-04-14T09:43:43.775192Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.777022Z", "completed_at": "2024-04-14T09:43:43.777048Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02172994613647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_certificates", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n  SELECT\n        CAST(\"_id\" AS VARCHAR) AS CERTIFICATE_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"certificateId\" AS INT) AS CERTIFICATE_ID_NUM,\n        CAST(\"certificateName\" AS VARCHAR) AS CERTIFICATE_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        CAST(\"issuingAuthority\" AS VARCHAR) AS ISSUING_AUTHORITY,\n        TO_TIMESTAMP(\"issueDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS ISSUE_DATE,\n        CAST(\"validityPeriodMonths\" AS INT) AS VALIDITY_PERIOD_MONTHS,\n        CAST(\"supportedDocumentLink\" AS VARCHAR) AS SUPPORTED_DOCUMENT_LINK,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS UPDATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.CERTIFICATES\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_certificates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.790517Z", "completed_at": "2024-04-14T09:43:43.805474Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.807231Z", "completed_at": "2024-04-14T09:43:43.807249Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021118640899658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_projectexperiences", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS PROJECT_EXPERIENCE_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"projectName\" AS VARCHAR) AS PROJECT_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        TO_TIMESTAMP(\"startDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS START_DATE,\n        TO_TIMESTAMP(\"endDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS END_DATE,\n        CAST(\"supportedDocumentLink\" AS VARCHAR) AS SUPPORTED_DOCUMENT_LINK\n    FROM\n        FINALPROJECTPROD.RAW.PROJECTEXPERIENCES\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_projectexperiences"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.821706Z", "completed_at": "2024-04-14T09:43:43.843508Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.847683Z", "completed_at": "2024-04-14T09:43:43.847836Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.035436153411865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_skills", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS SKILL_ID,\n        CAST(\"skillName\" AS VARCHAR) AS SKILL_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        CASE \n            WHEN \"createdAt\" IS NOT NULL THEN TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD HH24:MI:SS.FF3')\n            ELSE NULL \n        END AS CREATED_AT,\n        CASE \n            WHEN \"updatedAt\" IS NOT NULL THEN TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD HH24:MI:SS.FF3')\n            ELSE NULL \n        END AS UPDATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.SKILLS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_skills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.858573Z", "completed_at": "2024-04-14T09:43:43.877430Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.884235Z", "completed_at": "2024-04-14T09:43:43.884255Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029474258422851562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_users", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS USER_ID,\n        CAST(\"firstName\" AS VARCHAR) AS FIRST_NAME,\n        CAST(\"lastName\" AS VARCHAR) AS LAST_NAME,\n        CAST(\"email\" AS VARCHAR) AS EMAIL,\n        CAST(\"role\" AS VARCHAR) AS ROLE,\n        CAST(\"forcePasswordReset\" AS BOOLEAN) AS FORCE_PASSWORD_RESET,\n        CAST(\"isActive\" AS BOOLEAN) AS IS_ACTIVE,\n        CAST(\"designation\" AS VARCHAR) AS DESIGNATION,\n        CASE WHEN \"updatedAt\" = '' THEN NULL ELSE TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD HH24:MI:SS.FF3') END AS UPDATED_AT,\n        CASE WHEN \"createdAt\" = '' THEN NULL ELSE TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD HH24:MI:SS.FF3') END AS CREATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.USERS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_users"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.889820Z", "completed_at": "2024-04-14T09:43:43.903537Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.905061Z", "completed_at": "2024-04-14T09:43:43.905077Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018640756607055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_userskills", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n  SELECT\n        CAST(\"_id\" AS VARCHAR) AS USER_SKILL_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"skillId\" AS VARCHAR) AS SKILL_ID,\n        CASE WHEN \"certificateId\" IS NOT NULL THEN CAST(\"certificateId\" AS VARCHAR) ELSE NULL END AS CERTIFICATE_ID,\n        CAST(\"proficiency\" AS VARCHAR) AS PROFICIENCY,\n        CAST(\"status\" AS VARCHAR) AS STATUS,\n        CAST(\"hackerRankScore\" AS INT) AS HACKER_RANK_SCORE,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF3Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF3Z') AS UPDATED_AT,\n        CASE WHEN \"projectExperienceId\" IS NOT NULL THEN CAST(\"projectExperienceId\" AS VARCHAR) ELSE NULL END AS PROJECT_EXPERIENCE_ID,\n        CAST(\"approverDetailId\" AS VARCHAR) AS APPROVER_DETAIL_ID\n    FROM\n        FINALPROJECTPROD.RAW.USERSKILLS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_userskills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.913038Z", "completed_at": "2024-04-14T09:43:43.926679Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.933367Z", "completed_at": "2024-04-14T09:43:43.933404Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026240110397338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_approverdetails", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_approverdetails AS (\n\n    SELECT\n\n        APPROVER_DETAIL_ID,\n        USER_ID,\n        APPROVER_USER_ID,\n        STATUS,\n        RATING,\n        CREATED_AT,\n        UPDATED_AT\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_approverdetails\n),\n\nprep_approverdetails_duration AS (\n    \n    SELECT\n\n        *,\n        DATEDIFF(DAY, CREATED_AT, UPDATED_AT) AS DECISION_TIME_DAY\n    \n    FROM prep_approverdetails\n\n)\n\nSELECT * FROM prep_approverdetails_duration", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.938963Z", "completed_at": "2024-04-14T09:43:43.948206Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.951257Z", "completed_at": "2024-04-14T09:43:43.951293Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01564192771911621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_certificates", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_certificates AS (\n\n    SELECT\n    \n        CERTIFICATE_ID,\n        USER_ID,\n        CERTIFICATE_ID_NUM,\n        ISSUING_AUTHORITY,\n        ISSUE_DATE,\n        VALIDITY_PERIOD_MONTHS\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_certificates\n)\n\nSELECT * FROM prep_certificates", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_certificates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.956099Z", "completed_at": "2024-04-14T09:43:43.966942Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.968477Z", "completed_at": "2024-04-14T09:43:43.968493Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015372753143310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_projectexperiences", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_projectexperiences AS (\n\n    SELECT\n        PROJECT_EXPERIENCE_ID,\n        USER_ID,\n        PROJECT_NAME,\n        START_DATE,\n        END_DATE\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_projectexperiences\n),\n\nprep_projectexperiences_total_days AS (\n    \n    SELECT\n    \n    *,\n    DATEDIFF(DAY, START_DATE, END_DATE) + 1 AS TOTAL_NO_OF_DAYS_IN_PROJECT\n\n    FROM prep_projectexperiences\n)\n\nSELECT * FROM prep_projectexperiences_total_days", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_projectexperiences"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.973973Z", "completed_at": "2024-04-14T09:43:43.985094Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:43.986612Z", "completed_at": "2024-04-14T09:43:43.986628Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015779733657836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_skills", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_skills AS (\n\n    SELECT\n\n    SKILL_ID,\n    SKILL_NAME,\n    CREATED_AT,\n    UPDATED_AT\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_skills\n)\n\nSELECT * FROM prep_skills", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_skills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:43.991894Z", "completed_at": "2024-04-14T09:43:44.004734Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.006338Z", "completed_at": "2024-04-14T09:43:44.006354Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01776289939880371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_users", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_users AS (\n\n    SELECT\n\n    *\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_users\n),\n\nprep_users_full_name AS (\n    SELECT\n        *,\n        \"FIRST_NAME\" || ' ' || \"LAST_NAME\" AS FULL_NAME\n    FROM\n        prep_users\n),\n\nprep_users_without_names AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        EMAIL,\n        ROLE,\n        DESIGNATION\n        \n    FROM\n        prep_users_full_name\n)\n\n\n\nSELECT * FROM prep_users_without_names", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_users"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.018300Z", "completed_at": "2024-04-14T09:43:44.026376Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.031029Z", "completed_at": "2024-04-14T09:43:44.031464Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01949000358581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.fact_userskills", "compiled": true, "compiled_code": "\n\nWITH\n\n-- Load userskills table\nprep_userSkills AS (\n    SELECT\n        USER_SKILL_ID,\n        USER_ID,\n        SKILL_ID,\n        CERTIFICATE_ID,\n        PROJECT_EXPERIENCE_ID,\n        APPROVER_DETAIL_ID,\n        PROFICIENCY,\n        STATUS as VERIFIED_NOT,\n        HACKER_RANK_SCORE\n    FROM FINALPROJECTPROD.L1_PREP.prep_userskills\n),\n\n-- Load approverdetails table\nprep_approverdetails AS (\n    SELECT\n        APPROVER_DETAIL_ID,\n        CREATED_AT as APPROVER_CREATED_AT,\n        UPDATED_AT as APPROVER_UPDATED_AT\n    FROM FINALPROJECTPROD.L1_PREP.prep_approverdetails\n),\n\n-- Join userskills with approverdetails to calculate decision time\nfact_userskills AS (\n    SELECT\n        us.USER_SKILL_ID,\n        us.USER_ID,\n        us.SKILL_ID,\n        us.CERTIFICATE_ID,\n        us.PROJECT_EXPERIENCE_ID,\n        us.APPROVER_DETAIL_ID,\n        us.PROFICIENCY,\n        us.VERIFIED_NOT,\n        us.HACKER_RANK_SCORE,\n        DATEDIFF(DAY, ad.APPROVER_CREATED_AT, ad.APPROVER_UPDATED_AT) AS DECISION_TIME_DAYS\n    FROM prep_userSkills us\n    LEFT JOIN prep_approverdetails ad ON us.APPROVER_DETAIL_ID = ad.APPROVER_DETAIL_ID\n)\n\nSELECT * FROM fact_userskills", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.038262Z", "completed_at": "2024-04-14T09:43:44.051161Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.052710Z", "completed_at": "2024-04-14T09:43:44.052726Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01916360855102539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_emp_count_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n\n    SELECT\n    \n        *\n\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\nuser_counts_by_designation AS (\n    SELECT\n        DESIGNATION,\n        COUNT(*) AS USER_COUNT,\n        SUM(CASE WHEN ROLE = 'admin' THEN 1 ELSE 0 END) AS ADMIN_COUNT\n    FROM\n        dim_users\n    GROUP BY\n        DESIGNATION\n)\n\nSELECT * FROM user_counts_by_designation\n\n-- users count on designation and admin counts", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.059815Z", "completed_at": "2024-04-14T09:43:44.071555Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.072843Z", "completed_at": "2024-04-14T09:43:44.072857Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016077518463134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_certificate_on_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\ndim_approverdetails AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\ndim_certificates AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_certificates\n),\n\nfact_userskills_with_users AS (\n    SELECT\n        f.*,\n        u.DESIGNATION\n    FROM\n        FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills f\n    LEFT JOIN\n        dim_users u ON u.USER_ID = f.USER_ID\n),\n\nfact_userskills_with_approverdetails AS (\n    SELECT\n        f.*,\n        ad.STATUS\n    FROM\n        fact_userskills_with_users f\n    LEFT JOIN\n        dim_approverdetails ad ON ad.APPROVER_DETAIL_ID = f.APPROVER_DETAIL_ID\n),\n\ncertificate_counts_with_verified_and_pending AS (\n    SELECT\n        COALESCE(ucd.DESIGNATION, 'Unknown') AS DESIGNATION,\n        COUNT(DISTINCT f.CERTIFICATE_ID) AS TOTAL_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.CERTIFICATE_ID ELSE NULL END) AS VERIFIED_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.CERTIFICATE_ID ELSE NULL END) AS PENDING_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.CERTIFICATE_ID ELSE NULL END) AS REJECTED_CERTIFICATES,\n        (COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS \n        VERIFIED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS REJECTED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS PENDING_PERCENTAGE,\n        AVG(dc.VALIDITY_PERIOD_MONTHS) AS AVERAGE_VALIDITY_MONTHS\n    FROM\n        fact_userskills_with_approverdetails f\n    LEFT JOIN\n        dim_users ucd ON f.DESIGNATION = ucd.DESIGNATION\n    LEFT JOIN\n        dim_certificates dc ON f.CERTIFICATE_ID = dc.CERTIFICATE_ID\n    GROUP BY\n        COALESCE(ucd.DESIGNATION, 'Unknown')\n)\n\nSELECT \n    ccvp.DESIGNATION,\n    ccvp.TOTAL_CERTIFICATES,\n    ccvp.VERIFIED_CERTIFICATES,\n    ccvp.PENDING_CERTIFICATES,\n    ccvp.REJECTED_CERTIFICATES,\n    ccvp.VERIFIED_PERCENTAGE,\n    ccvp.PENDING_PERCENTAGE,\n    ccvp.REJECTED_PERCENTAGE,\n    ccvp.AVERAGE_VALIDITY_MONTHS\nFROM \n    certificate_counts_with_verified_and_pending ccvp", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.078686Z", "completed_at": "2024-04-14T09:43:44.089539Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.090865Z", "completed_at": "2024-04-14T09:43:44.090881Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016193389892578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_project_exp_on_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\ndim_approverdetails AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\ndim_projectexperience AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_projectexperiences\n),\n\nfact_userskills_with_users AS (\n    SELECT\n        f.*,\n        u.DESIGNATION\n    FROM\n        FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills f\n    LEFT JOIN\n        dim_users u ON u.USER_ID = f.USER_ID\n),\n\nfact_userskills_with_approverdetails AS (\n    SELECT\n        f.*,\n        ad.STATUS\n    FROM\n        fact_userskills_with_users f\n    LEFT JOIN\n        dim_approverdetails ad ON ad.APPROVER_DETAIL_ID = f.APPROVER_DETAIL_ID\n),\n\nproject_experience_counts_with_verified_and_pending AS (\n    SELECT\n        COALESCE(ucd.DESIGNATION, 'Unknown') AS DESIGNATION,\n        COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID) AS TOTAL_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS PENDING_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS REJECTED_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS VERIFIED_PROJECT_EXPERIENCES,\n        AVG(DISTINCT pe.TOTAL_NO_OF_DAYS_IN_PROJECT) AS AVERAGE_DAYS_IN_PROJECT,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS PENDING_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS REJECTED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS VERIFIED_PERCENTAGE\n    FROM\n        fact_userskills_with_approverdetails f\n    LEFT JOIN\n        dim_users ucd ON f.DESIGNATION = ucd.DESIGNATION\n    LEFT JOIN\n        dim_projectexperience pe ON f.PROJECT_EXPERIENCE_ID = pe.PROJECT_EXPERIENCE_ID\n    GROUP BY\n        COALESCE(ucd.DESIGNATION, 'Unknown')\n)\n\nSELECT \n    pcvp.DESIGNATION,\n    pcvp.TOTAL_PROJECT_EXPERIENCES,\n    pcvp.PENDING_PROJECT_EXPERIENCES,\n    pcvp.REJECTED_PROJECT_EXPERIENCES,\n    pcvp.VERIFIED_PROJECT_EXPERIENCES,\n    pcvp.PENDING_PERCENTAGE,\n    pcvp.REJECTED_PERCENTAGE,\n    pcvp.VERIFIED_PERCENTAGE,\n    pcvp.AVERAGE_DAYS_IN_PROJECT\nFROM \n    project_experience_counts_with_verified_and_pending pcvp", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.100458Z", "completed_at": "2024-04-14T09:43:44.109088Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.114446Z", "completed_at": "2024-04-14T09:43:44.114577Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022126436233520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_matrix", "compiled": true, "compiled_code": "\n\n-- Load user table\nWITH dim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n-- Load approval details table\ndim_approval_details AS (\n    SELECT\n        USER_ID,\n        STATUS\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Load fact table\nfact_userskills AS (\n    SELECT\n        USER_ID,\n        APPROVER_DETAIL_ID\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Right join fact and users\nfact_users_right_join_users AS (\n    SELECT\n        COALESCE(fu.USER_ID, du.USER_ID) AS USER_ID,\n        COALESCE(ad.STATUS, 'No Skill') AS STATUS\n    FROM dim_users du\n    LEFT JOIN fact_userskills fu ON du.USER_ID = fu.USER_ID\n    LEFT JOIN dim_approval_details ad ON du.USER_ID = ad.USER_ID\n),\n\n-- Count different statuses for non-skill users\nnon_skill_user_status_counts AS (\n    SELECT\n        fu.USER_ID,\n        SUM(CASE WHEN fu.STATUS = 'Approved' THEN 1 ELSE 0 END) AS total_approved_skills,\n        SUM(CASE WHEN fu.STATUS = 'Rejected' THEN 1 ELSE 0 END) AS total_rejected_skills,\n        SUM(CASE WHEN fu.STATUS = 'Pending' THEN 1 ELSE 0 END) AS total_pending_skills\n    FROM fact_users_right_join_users fu\n    WHERE fu.STATUS != 'No Skill'\n    GROUP BY fu.USER_ID\n)\n\n-- Final output: User ID, counts for each status category\nSELECT\n    du.USER_ID,\n    du.FULL_NAME,\n    du.DESIGNATION,\n    COALESCE(nsu.total_approved_skills, 0) AS total_approved_skills,\n    COALESCE(nsu.total_rejected_skills, 0) AS total_rejected_skills,\n    COALESCE(nsu.total_pending_skills, 0) AS total_pending_skills\nFROM\n    dim_users du\nLEFT JOIN\n    non_skill_user_status_counts nsu ON du.USER_ID = nsu.USER_ID\nORDER BY\n    du.USER_ID", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_matrix"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.121999Z", "completed_at": "2024-04-14T09:43:44.133919Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.135240Z", "completed_at": "2024-04-14T09:43:44.135253Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01599574089050293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_not_verified", "compiled": true, "compiled_code": "\n\n-- Load userskills table\nWITH fact_userskills AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Load user table\ndim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n\ndim_approverdetails AS(\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Count verified distinct skills for each user\nverified_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS verified_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Count advanced skills for each user\nadvanced_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS advanced_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'advanced'\n    GROUP BY USER_ID\n),\n\n-- Count intermediate skills for each user\nintermediate_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS intermediate_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'intermediate'\n    GROUP BY USER_ID\n),\n\n-- Count beginner skills for each user\nbeginner_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS beginner_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'beginner'\n    GROUP BY USER_ID\n),\n\n-- Calculate average hacker rank score for verified skills for each user\naverage_hacker_rank_score AS (\n    SELECT\n        USER_ID,\n        AVG(HACKER_RANK_SCORE) AS average_hacker_rank_score_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Calculate average decision time for verified skills for each user\naverage_decision_time AS (\n    SELECT\n        USER_ID,\n        AVG(DECISION_TIME_DAYS) AS average_decision_time_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Load approverdetails table and calculate average rating for approved records\naverage_rating_approved AS (\n    SELECT\n        USER_ID,\n        AVG(RATING) AS average_rating_approved\n    FROM dim_approverdetails\n    WHERE STATUS = 'Rejected'\n    GROUP BY USER_ID\n),\n\n-- Final SELECT statement\nfinal_results AS (\n    SELECT \n        u.USER_ID,\n        u.FULL_NAME,\n        u.DESIGNATION,\n        COALESCE(vsc.verified_skill_count, 0) AS verified_skill_count,\n        COALESCE(asc.advanced_skill_count, 0) AS advanced_skill_count,\n        COALESCE(isc.intermediate_skill_count, 0) AS intermediate_skill_count,\n        COALESCE(bsc.beginner_skill_count, 0) AS beginner_skill_count,\n        COALESCE(ahrs.average_hacker_rank_score_verified, 0) AS average_hacker_rank_score_verified,\n        COALESCE(adt.average_decision_time_verified, 0) AS average_decision_time_verified,\n        COALESCE(ara.average_rating_approved, 0) AS average_rating_approved\n    FROM dim_users u\n    LEFT JOIN verified_skills_count vsc ON u.USER_ID = vsc.USER_ID\n    LEFT JOIN advanced_skills_count asc ON u.USER_ID = asc.USER_ID\n    LEFT JOIN intermediate_skills_count isc ON u.USER_ID = isc.USER_ID\n    LEFT JOIN beginner_skills_count bsc ON u.USER_ID = bsc.USER_ID\n    LEFT JOIN average_hacker_rank_score ahrs ON u.USER_ID = ahrs.USER_ID\n    LEFT JOIN average_decision_time adt ON u.USER_ID = adt.USER_ID\n    LEFT JOIN average_rating_approved ara ON u.USER_ID = ara.USER_ID\n)\n\n-- Output the final results\nSELECT * FROM final_results ORDER BY verified_skill_count DESC", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.140086Z", "completed_at": "2024-04-14T09:43:44.151240Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.152568Z", "completed_at": "2024-04-14T09:43:44.152582Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015213251113891602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_verified", "compiled": true, "compiled_code": "\n\n-- Load userskills table\nWITH fact_userskills AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Load user table\ndim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n\ndim_approverdetails AS(\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Count verified distinct skills for each user\nverified_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS verified_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Count advanced skills for each user\nadvanced_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS advanced_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'advanced'\n    GROUP BY USER_ID\n),\n\n-- Count intermediate skills for each user\nintermediate_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS intermediate_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'intermediate'\n    GROUP BY USER_ID\n),\n\n-- Count beginner skills for each user\nbeginner_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS beginner_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'beginner'\n    GROUP BY USER_ID\n),\n\n-- Calculate average hacker rank score for verified skills for each user\naverage_hacker_rank_score AS (\n    SELECT\n        USER_ID,\n        AVG(HACKER_RANK_SCORE) AS average_hacker_rank_score_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Calculate average decision time for verified skills for each user\naverage_decision_time AS (\n    SELECT\n        USER_ID,\n        AVG(DECISION_TIME_DAYS) AS average_decision_time_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Load approverdetails table and calculate average rating for approved records\naverage_rating_approved AS (\n    SELECT\n        USER_ID,\n        AVG(RATING) AS average_rating_approved\n    FROM dim_approverdetails\n    WHERE STATUS = 'Approved'\n    GROUP BY USER_ID\n),\n\n-- Final SELECT statement\nfinal_results AS (\n    SELECT \n        u.USER_ID,\n        u.FULL_NAME,\n        u.DESIGNATION,\n        COALESCE(vsc.verified_skill_count, 0) AS verified_skill_count,\n        COALESCE(asc.advanced_skill_count, 0) AS advanced_skill_count,\n        COALESCE(isc.intermediate_skill_count, 0) AS intermediate_skill_count,\n        COALESCE(bsc.beginner_skill_count, 0) AS beginner_skill_count,\n        COALESCE(ahrs.average_hacker_rank_score_verified, 0) AS average_hacker_rank_score_verified,\n        COALESCE(adt.average_decision_time_verified, 0) AS average_decision_time_verified,\n        COALESCE(ara.average_rating_approved, 0) AS average_rating_approved\n    FROM dim_users u\n    LEFT JOIN verified_skills_count vsc ON u.USER_ID = vsc.USER_ID\n    LEFT JOIN advanced_skills_count asc ON u.USER_ID = asc.USER_ID\n    LEFT JOIN intermediate_skills_count isc ON u.USER_ID = isc.USER_ID\n    LEFT JOIN beginner_skills_count bsc ON u.USER_ID = bsc.USER_ID\n    LEFT JOIN average_hacker_rank_score ahrs ON u.USER_ID = ahrs.USER_ID\n    LEFT JOIN average_decision_time adt ON u.USER_ID = adt.USER_ID\n    LEFT JOIN average_rating_approved ara ON u.USER_ID = ara.USER_ID\n)\n\n-- Output the final results\nSELECT * FROM final_results ORDER BY verified_skill_count DESC", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.156811Z", "completed_at": "2024-04-14T09:43:44.170228Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.171713Z", "completed_at": "2024-04-14T09:43:44.171729Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017556428909301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_user_status", "compiled": true, "compiled_code": "\n\n-- Load user table\nWITH dim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n-- Load approval details table\ndim_approval_details AS (\n    SELECT\n        APPROVER_DETAIL_ID,\n        USER_ID,\n        STATUS\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Load fact table\nfact_userskills AS (\n    SELECT\n        USER_ID,\n        APPROVER_DETAIL_ID\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Right join fact and users\nfact_users_right_join_users AS (\n    SELECT\n        COALESCE(fu.USER_ID, du.USER_ID) AS USER_ID,\n        COALESCE(du.FULL_NAME, du.FULL_NAME) AS FULL_NAME,\n        COALESCE(ad.STATUS, 'No Skill') AS STATUS\n    FROM fact_userskills fu\n    LEFT JOIN dim_users du ON fu.USER_ID = du.USER_ID\n    LEFT JOIN dim_approval_details ad ON fu.APPROVER_DETAIL_ID = ad.APPROVER_DETAIL_ID\n),\n\n-- Count different statuses for non-skill users\nnon_skill_user_status_counts AS (\n    SELECT\n        fu.USER_ID,\n        SUM(CASE WHEN fu.STATUS = 'Approved' THEN 1 ELSE 0 END) AS total_approved_skills,\n        SUM(CASE WHEN fu.STATUS = 'Rejected' THEN 1 ELSE 0 END) AS total_rejected_skills,\n        SUM(CASE WHEN fu.STATUS = 'Pending' THEN 1 ELSE 0 END) AS total_pending_skills\n    FROM fact_users_right_join_users fu\n    WHERE fu.STATUS != 'No Skill'\n    GROUP BY fu.USER_ID\n)\n\n-- Final output: User ID, counts for each status category\nSELECT\n    du.USER_ID,\n    du.FULL_NAME,\n    du.DESIGNATION,\n    COALESCE(nsu.total_approved_skills, 0) AS total_approved_skills,\n    COALESCE(nsu.total_rejected_skills, 0) AS total_rejected_skills,\n    COALESCE(nsu.total_pending_skills, 0) AS total_pending_skills\nFROM\n    dim_users du\nLEFT JOIN\n    non_skill_user_status_counts nsu ON du.USER_ID = nsu.USER_ID\nORDER BY\n    du.USER_ID", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_user_status"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.182446Z", "completed_at": "2024-04-14T09:43:44.201468Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.202966Z", "completed_at": "2024-04-14T09:43:44.202998Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028415679931640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_certificate_on_designation_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.8b404e7593", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.207168Z", "completed_at": "2024-04-14T09:43:44.219935Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.221224Z", "completed_at": "2024-04-14T09:43:44.221238Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01668715476989746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_emp_count_designation_DESIGNATION__Sr_Software_Engineer__Solution_Enabler__Architect__Software_Engineer__Principal_Architect__Consultant.9e7f55e82d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Sr. Software Engineer','Solution Enabler','Architect','Software Engineer','Principal Architect','Consultant'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.225239Z", "completed_at": "2024-04-14T09:43:44.233923Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.235144Z", "completed_at": "2024-04-14T09:43:44.235157Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012321233749389648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_project_exp_on_designation_DESIGNATION__Sr_Software_Engineer__Solution_Enabler__Architect__Software_Engineer__Principal_Architect__Consultant.04d641ff71", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Sr. Software Engineer','Solution Enabler','Architect','Software Engineer','Principal Architect','Consultant'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.239258Z", "completed_at": "2024-04-14T09:43:44.249290Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.250711Z", "completed_at": "2024-04-14T09:43:44.250726Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014147043228149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_skills_not_verified_DESIGNATION__Principal_Architect__Architect__Solution_Enabler__Consultant__Software_Engineer__Sr_Software_Engineer.3ed9572e30", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Principal Architect','Architect','Solution Enabler','Consultant','Software Engineer','Sr. Software Engineer'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.255155Z", "completed_at": "2024-04-14T09:43:44.265248Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.266638Z", "completed_at": "2024-04-14T09:43:44.266654Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014184951782226562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_skills_verified_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.471694dcdc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.271630Z", "completed_at": "2024-04-14T09:43:44.283306Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.284650Z", "completed_at": "2024-04-14T09:43:44.284664Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01573944091796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_user_status_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.a0e513c408", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.289069Z", "completed_at": "2024-04-14T09:43:44.304334Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.305629Z", "completed_at": "2024-04-14T09:43:44.305645Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01918315887451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_AVERAGE_VALIDITY_MONTHS__0.0364d6ac0b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_VALIDITY_MONTHS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.312343Z", "completed_at": "2024-04-14T09:43:44.319890Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.321195Z", "completed_at": "2024-04-14T09:43:44.321225Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012185096740722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_PENDING_CERTIFICATES__0.b2f171dca9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.325643Z", "completed_at": "2024-04-14T09:43:44.334088Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.335314Z", "completed_at": "2024-04-14T09:43:44.335327Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01231527328491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_PENDING_PERCENTAGE__100__0.c0cadffebd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.339554Z", "completed_at": "2024-04-14T09:43:44.348127Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.349344Z", "completed_at": "2024-04-14T09:43:44.349357Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012341499328613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_REJECTED_CERTIFICATES__0.dcf04b508f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.353504Z", "completed_at": "2024-04-14T09:43:44.362391Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.363643Z", "completed_at": "2024-04-14T09:43:44.363656Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01256251335144043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_REJECTED_PERCENTAGE__100__0.5fd632f09d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.367742Z", "completed_at": "2024-04-14T09:43:44.378156Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.379542Z", "completed_at": "2024-04-14T09:43:44.379557Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01430964469909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_TOTAL_CERTIFICATES__0.5df5f528e6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.383749Z", "completed_at": "2024-04-14T09:43:44.393767Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.395205Z", "completed_at": "2024-04-14T09:43:44.395220Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014039278030395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_VERIFIED_CERTIFICATES__0.57c48d9e05", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.399600Z", "completed_at": "2024-04-14T09:43:44.407195Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.410041Z", "completed_at": "2024-04-14T09:43:44.410070Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013316631317138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_VERIFIED_PERCENTAGE__100__0.3fda5d0f25", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.414750Z", "completed_at": "2024-04-14T09:43:44.422255Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.423789Z", "completed_at": "2024-04-14T09:43:44.423803Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011973857879638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_emp_count_designation_ADMIN_COUNT__0.cc1a6bee51", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADMIN_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.429987Z", "completed_at": "2024-04-14T09:43:44.437368Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.438614Z", "completed_at": "2024-04-14T09:43:44.438628Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01136326789855957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_emp_count_designation_USER_COUNT__0.bebb7f7880", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not USER_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.444643Z", "completed_at": "2024-04-14T09:43:44.454182Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.455519Z", "completed_at": "2024-04-14T09:43:44.455533Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01417088508605957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_AVERAGE_DAYS_IN_PROJECT__0.d89a21a82f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DAYS_IN_PROJECT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.462591Z", "completed_at": "2024-04-14T09:43:44.472693Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.474273Z", "completed_at": "2024-04-14T09:43:44.474287Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015909910202026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_PENDING_PERCENTAGE__100__0.4a6121415e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.480288Z", "completed_at": "2024-04-14T09:43:44.489125Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.492400Z", "completed_at": "2024-04-14T09:43:44.492544Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016391992568969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_PENDING_PROJECT_EXPERIENCES__0.ff285ff03a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.500716Z", "completed_at": "2024-04-14T09:43:44.511369Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.513302Z", "completed_at": "2024-04-14T09:43:44.513323Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016770362854003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_REJECTED_PERCENTAGE__100__0.9360df6ad4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.518953Z", "completed_at": "2024-04-14T09:43:44.529411Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.530803Z", "completed_at": "2024-04-14T09:43:44.530818Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015374898910522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_REJECTED_PROJECT_EXPERIENCES__0.868ac28bf2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.535886Z", "completed_at": "2024-04-14T09:43:44.547381Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.549051Z", "completed_at": "2024-04-14T09:43:44.549068Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01641106605529785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_TOTAL_PROJECT_EXPERIENCES__0.aa728ff80c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.554032Z", "completed_at": "2024-04-14T09:43:44.564790Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.566603Z", "completed_at": "2024-04-14T09:43:44.566621Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015584230422973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_VERIFIED_PERCENTAGE__100__0.4d11a1704f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.571951Z", "completed_at": "2024-04-14T09:43:44.584622Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.586032Z", "completed_at": "2024-04-14T09:43:44.586048Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017903804779052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_VERIFIED_PROJECT_EXPERIENCES__0.bf2929f971", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.594685Z", "completed_at": "2024-04-14T09:43:44.612408Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.614343Z", "completed_at": "2024-04-14T09:43:44.614361Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02367258071899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_ADVANCED_SKILL_COUNT__0.09f791781f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADVANCED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.620321Z", "completed_at": "2024-04-14T09:43:44.632488Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.634207Z", "completed_at": "2024-04-14T09:43:44.634225Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017398595809936523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_DECISION_TIME_VERIFIED__0.b5c8abcebb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DECISION_TIME_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.639861Z", "completed_at": "2024-04-14T09:43:44.651672Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.653400Z", "completed_at": "2024-04-14T09:43:44.653420Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016999244689941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_HACKER_RANK_SCORE_VERIFIED__0.c05d7a301d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_HACKER_RANK_SCORE_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.660830Z", "completed_at": "2024-04-14T09:43:44.670353Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.672025Z", "completed_at": "2024-04-14T09:43:44.672043Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015593290328979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_RATING_APPROVED__0.61ddde6a43", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_RATING_APPROVED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.678631Z", "completed_at": "2024-04-14T09:43:44.687518Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.688966Z", "completed_at": "2024-04-14T09:43:44.688982Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013844728469848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_BEGINNER_SKILL_COUNT__0.a280471172", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not BEGINNER_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.696520Z", "completed_at": "2024-04-14T09:43:44.713775Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.715378Z", "completed_at": "2024-04-14T09:43:44.715395Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023137569427490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_INTERMEDIATE_SKILL_COUNT__0.838e9ce726", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not INTERMEDIATE_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.721583Z", "completed_at": "2024-04-14T09:43:44.734534Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.736601Z", "completed_at": "2024-04-14T09:43:44.736624Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018931865692138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_VERIFIED_SKILL_COUNT__0.709550bff2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.746776Z", "completed_at": "2024-04-14T09:43:44.757665Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.760431Z", "completed_at": "2024-04-14T09:43:44.760457Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018177270889282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_ADVANCED_SKILL_COUNT__0.d9599dabff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADVANCED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.766134Z", "completed_at": "2024-04-14T09:43:44.776709Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.778286Z", "completed_at": "2024-04-14T09:43:44.778303Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015547990798950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_DECISION_TIME_VERIFIED__0.2744a3851a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DECISION_TIME_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.783368Z", "completed_at": "2024-04-14T09:43:44.793099Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.794560Z", "completed_at": "2024-04-14T09:43:44.794577Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014194488525390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_HACKER_RANK_SCORE_VERIFIED__0.eb2f0f8109", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_HACKER_RANK_SCORE_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.799786Z", "completed_at": "2024-04-14T09:43:44.813452Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.814915Z", "completed_at": "2024-04-14T09:43:44.814931Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018381595611572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_RATING_APPROVED__0.097c6fa894", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_RATING_APPROVED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.821726Z", "completed_at": "2024-04-14T09:43:44.838061Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.839995Z", "completed_at": "2024-04-14T09:43:44.840074Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024021148681640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_BEGINNER_SKILL_COUNT__0.abf4fd5194", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not BEGINNER_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.846189Z", "completed_at": "2024-04-14T09:43:44.853936Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.855946Z", "completed_at": "2024-04-14T09:43:44.855988Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014235734939575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_INTERMEDIATE_SKILL_COUNT__0.31f0751448", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not INTERMEDIATE_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.862218Z", "completed_at": "2024-04-14T09:43:44.869895Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.871289Z", "completed_at": "2024-04-14T09:43:44.871303Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011700153350830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_VERIFIED_SKILL_COUNT__0.d1ee27dde7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.877321Z", "completed_at": "2024-04-14T09:43:44.885171Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.886425Z", "completed_at": "2024-04-14T09:43:44.886441Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011907339096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_APPROVED_SKILLS__0.2964a74f85", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_APPROVED_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.892650Z", "completed_at": "2024-04-14T09:43:44.899972Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.901164Z", "completed_at": "2024-04-14T09:43:44.901177Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012935400009155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_PENDING_SKILLS__0.e307af9712", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_PENDING_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.905405Z", "completed_at": "2024-04-14T09:43:44.916522Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.917664Z", "completed_at": "2024-04-14T09:43:44.917678Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01479029655456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_REJECTED_SKILLS__0.cdcf55e1f9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_REJECTED_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.926193Z", "completed_at": "2024-04-14T09:43:44.945515Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.946811Z", "completed_at": "2024-04-14T09:43:44.946827Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027208566665649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_certificate_on_designation_DESIGNATION.b9c3760438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.951748Z", "completed_at": "2024-04-14T09:43:44.960399Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.961779Z", "completed_at": "2024-04-14T09:43:44.961794Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012514829635620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_emp_count_designation_DESIGNATION.5197c24207", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.965716Z", "completed_at": "2024-04-14T09:43:44.974072Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.975577Z", "completed_at": "2024-04-14T09:43:44.975593Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012420177459716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_project_exp_on_designation_DESIGNATION.777529f08c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.979996Z", "completed_at": "2024-04-14T09:43:44.987770Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:44.990256Z", "completed_at": "2024-04-14T09:43:44.990366Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013547182083129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_DESIGNATION.9b8688f9da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:44.997671Z", "completed_at": "2024-04-14T09:43:45.006453Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.009383Z", "completed_at": "2024-04-14T09:43:45.009402Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01558828353881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_FULL_NAME.feb88f4e44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.016780Z", "completed_at": "2024-04-14T09:43:45.027768Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.029213Z", "completed_at": "2024-04-14T09:43:45.029228Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017720460891723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_USER_ID.b708f15498", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect USER_ID\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere USER_ID is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.035812Z", "completed_at": "2024-04-14T09:43:45.050011Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.051315Z", "completed_at": "2024-04-14T09:43:45.051330Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020355224609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_verified_DESIGNATION.6fe7de72e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.058101Z", "completed_at": "2024-04-14T09:43:45.066171Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.067507Z", "completed_at": "2024-04-14T09:43:45.067521Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013555526733398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_verified_FULL_NAME.86cd96e248", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.071970Z", "completed_at": "2024-04-14T09:43:45.081350Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.082620Z", "completed_at": "2024-04-14T09:43:45.082636Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013352394104003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_DESIGNATION.84b016f529", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.086838Z", "completed_at": "2024-04-14T09:43:45.095963Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.097283Z", "completed_at": "2024-04-14T09:43:45.097297Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012948989868164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_FULL_NAME.d7e7d1a746", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.102109Z", "completed_at": "2024-04-14T09:43:45.110780Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.111978Z", "completed_at": "2024-04-14T09:43:45.111991Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013050556182861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_USER_ID.2cf9e2df7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect USER_ID\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere USER_ID is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.115873Z", "completed_at": "2024-04-14T09:43:45.131752Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.132948Z", "completed_at": "2024-04-14T09:43:45.132962Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019526243209838867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.unique_mart_skills_not_verified_USER_ID.fbd4f6a0ed", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    USER_ID as unique_field,\n    count(*) as n_records\n\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere USER_ID is not null\ngroup by USER_ID\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-14T09:43:45.137370Z", "completed_at": "2024-04-14T09:43:45.149249Z"}, {"name": "execute", "started_at": "2024-04-14T09:43:45.150523Z", "completed_at": "2024-04-14T09:43:45.150537Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015804052352905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.unique_mart_user_status_USER_ID.14605e161f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    USER_ID as unique_field,\n    count(*) as n_records\n\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere USER_ID is not null\ngroup by USER_ID\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 3.8115265369415283, "args": {"populate_cache": true, "profiles_dir": "/root/.dbt", "which": "generate", "send_anonymous_usage_stats": true, "printer_width": 80, "introspect": true, "quiet": false, "log_path": "/app/DBT/logs", "defer": false, "indirect_selection": "eager", "partial_parse": true, "log_format": "default", "cache_selected_only": false, "macro_debugging": false, "log_level": "info", "favor_state": false, "use_colors": true, "vars": {}, "static_parser": true, "select": [], "invocation_command": "dbt --bind 0.0.0.0:80 --worker-class=gevent --worker-connections=1000 --workers=3 --timeout 300 server:app", "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "project_dir": "/app/DBT", "log_level_file": "debug", "use_colors_file": true, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "compile": true, "show_resource_report": false, "empty_catalog": false, "exclude": [], "log_format_file": "debug", "strict_mode": false, "static": false, "enable_legacy_logger": false, "print": true}}