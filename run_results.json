{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-13T06:06:04.013704Z", "invocation_id": "b3477110-0187-4f1d-9a58-c4b242f5d5f2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.693314Z", "completed_at": "2024-04-13T06:06:02.703275Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.707182Z", "completed_at": "2024-04-13T06:06:02.707182Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.032988548278808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_certificates", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n  SELECT\n        CAST(\"_id\" AS VARCHAR) AS CERTIFICATE_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"certificateId\" AS INT) AS CERTIFICATE_ID_NUM,\n        CAST(\"certificateName\" AS VARCHAR) AS CERTIFICATE_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        CAST(\"issuingAuthority\" AS VARCHAR) AS ISSUING_AUTHORITY,\n        TO_TIMESTAMP(\"issueDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS ISSUE_DATE,\n        CAST(\"validityPeriodMonths\" AS INT) AS VALIDITY_PERIOD_MONTHS,\n        CAST(\"supportedDocumentLink\" AS VARCHAR) AS SUPPORTED_DOCUMENT_LINK,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS UPDATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.CERTIFICATES\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_certificates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.679158Z", "completed_at": "2024-04-13T06:06:02.704201Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.707182Z", "completed_at": "2024-04-13T06:06:02.707182Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03427743911743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_approverdetails", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        \"_id\" AS APPROVER_DETAIL_ID,\n        \"userId\" AS USER_ID,\n        \"approverUserId\" AS APPROVER_USER_ID,\n        \"userSkillId\" AS USER_SKILL_ID,\n        \"status\" AS STATUS,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS UPDATED_AT,\n        CASE WHEN \"comments\" IS NOT NULL THEN \"comments\" ELSE NULL END AS COMMENTS,\n        TRY_CAST(\"rating\" AS FLOAT) AS RATING -- Try to cast rating to FLOAT\n    FROM\n        FINALPROJECTPROD.RAW.APPROVERDETAILS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_approverdetails"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.722951Z", "completed_at": "2024-04-13T06:06:02.735728Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.739722Z", "completed_at": "2024-04-13T06:06:02.739722Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.025681257247924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_projectexperiences", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS PROJECT_EXPERIENCE_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"projectName\" AS VARCHAR) AS PROJECT_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        TO_TIMESTAMP(\"startDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS START_DATE,\n        TO_TIMESTAMP(\"endDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS END_DATE,\n        CAST(\"supportedDocumentLink\" AS VARCHAR) AS SUPPORTED_DOCUMENT_LINK\n    FROM\n        FINALPROJECTPROD.RAW.PROJECTEXPERIENCES\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_projectexperiences"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.725125Z", "completed_at": "2024-04-13T06:06:02.736736Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.740814Z", "completed_at": "2024-04-13T06:06:02.740814Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.028225421905517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_skills", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS SKILL_ID,\n        CAST(\"skillName\" AS VARCHAR) AS SKILL_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        CASE \n            WHEN \"createdAt\" IS NOT NULL THEN TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD HH24:MI:SS.FF3')\n            ELSE NULL \n        END AS CREATED_AT,\n        CASE \n            WHEN \"updatedAt\" IS NOT NULL THEN TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD HH24:MI:SS.FF3')\n            ELSE NULL \n        END AS UPDATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.SKILLS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_skills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.758320Z", "completed_at": "2024-04-13T06:06:02.766234Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.771315Z", "completed_at": "2024-04-13T06:06:02.771315Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.02300095558166504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_userskills", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n  SELECT\n        CAST(\"_id\" AS VARCHAR) AS USER_SKILL_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"skillId\" AS VARCHAR) AS SKILL_ID,\n        CASE WHEN \"certificateId\" IS NOT NULL THEN CAST(\"certificateId\" AS VARCHAR) ELSE NULL END AS CERTIFICATE_ID,\n        CAST(\"proficiency\" AS VARCHAR) AS PROFICIENCY,\n        CAST(\"status\" AS VARCHAR) AS STATUS,\n        CAST(\"hackerRankScore\" AS INT) AS HACKER_RANK_SCORE,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF3Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF3Z') AS UPDATED_AT,\n        CASE WHEN \"projectExperienceId\" IS NOT NULL THEN CAST(\"projectExperienceId\" AS VARCHAR) ELSE NULL END AS PROJECT_EXPERIENCE_ID,\n        CAST(\"approverDetailId\" AS VARCHAR) AS APPROVER_DETAIL_ID\n    FROM\n        FINALPROJECTPROD.RAW.USERSKILLS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_userskills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.753226Z", "completed_at": "2024-04-13T06:06:02.767225Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.772226Z", "completed_at": "2024-04-13T06:06:02.772226Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.026007652282714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_users", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS USER_ID,\n        CAST(\"firstName\" AS VARCHAR) AS FIRST_NAME,\n        CAST(\"lastName\" AS VARCHAR) AS LAST_NAME,\n        CAST(\"email\" AS VARCHAR) AS EMAIL,\n        CAST(\"role\" AS VARCHAR) AS ROLE,\n        CAST(\"forcePasswordReset\" AS BOOLEAN) AS FORCE_PASSWORD_RESET,\n        CAST(\"isActive\" AS BOOLEAN) AS IS_ACTIVE,\n        CAST(\"designation\" AS VARCHAR) AS DESIGNATION,\n        CASE WHEN \"updatedAt\" = '' THEN NULL ELSE TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD HH24:MI:SS.FF3') END AS UPDATED_AT,\n        CASE WHEN \"createdAt\" = '' THEN NULL ELSE TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD HH24:MI:SS.FF3') END AS CREATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.USERS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_users"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.785542Z", "completed_at": "2024-04-13T06:06:02.798305Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.803305Z", "completed_at": "2024-04-13T06:06:02.803305Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.02474522590637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_certificates", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_certificates AS (\n\n    SELECT\n    \n        CERTIFICATE_ID,\n        USER_ID,\n        CERTIFICATE_ID_NUM,\n        ISSUING_AUTHORITY,\n        ISSUE_DATE,\n        VALIDITY_PERIOD_MONTHS\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_certificates\n)\n\nSELECT * FROM prep_certificates", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_certificates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.791540Z", "completed_at": "2024-04-13T06:06:02.800413Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.804316Z", "completed_at": "2024-04-13T06:06:02.804316Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.025761842727661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_approverdetails", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_approverdetails AS (\n\n    SELECT\n\n        APPROVER_DETAIL_ID,\n        USER_ID,\n        APPROVER_USER_ID,\n        STATUS,\n        RATING,\n        CREATED_AT,\n        UPDATED_AT\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_approverdetails\n),\n\nprep_approverdetails_duration AS (\n    \n    SELECT\n\n        *,\n        DATEDIFF(DAY, CREATED_AT, UPDATED_AT) AS DECISION_TIME_DAY\n    \n    FROM prep_approverdetails\n\n)\n\nSELECT * FROM prep_approverdetails_duration", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.821693Z", "completed_at": "2024-04-13T06:06:02.826003Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.832537Z", "completed_at": "2024-04-13T06:06:02.832537Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.021839380264282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_skills", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_skills AS (\n\n    SELECT\n\n    SKILL_ID,\n    SKILL_NAME,\n    CREATED_AT,\n    UPDATED_AT\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_skills\n)\n\nSELECT * FROM prep_skills", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_skills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.816690Z", "completed_at": "2024-04-13T06:06:02.826003Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.833529Z", "completed_at": "2024-04-13T06:06:02.833529Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.02802586555480957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_projectexperiences", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_projectexperiences AS (\n\n    SELECT\n        PROJECT_EXPERIENCE_ID,\n        USER_ID,\n        PROJECT_NAME,\n        START_DATE,\n        END_DATE\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_projectexperiences\n),\n\nprep_projectexperiences_total_days AS (\n    \n    SELECT\n    \n    *,\n    DATEDIFF(DAY, START_DATE, END_DATE) + 1 AS TOTAL_NO_OF_DAYS_IN_PROJECT\n\n    FROM prep_projectexperiences\n)\n\nSELECT * FROM prep_projectexperiences_total_days", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_projectexperiences"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.847118Z", "completed_at": "2024-04-13T06:06:02.858310Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.863914Z", "completed_at": "2024-04-13T06:06:02.863914Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.024518489837646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.fact_userskills", "compiled": true, "compiled_code": "\n\nWITH\n\n-- Load userskills table\nprep_userSkills AS (\n    SELECT\n        USER_SKILL_ID,\n        USER_ID,\n        SKILL_ID,\n        CERTIFICATE_ID,\n        PROJECT_EXPERIENCE_ID,\n        APPROVER_DETAIL_ID,\n        PROFICIENCY,\n        STATUS as VERIFIED_NOT,\n        HACKER_RANK_SCORE\n    FROM FINALPROJECTPROD.L1_PREP.prep_userskills\n),\n\n-- Load approverdetails table\nprep_approverdetails AS (\n    SELECT\n        APPROVER_DETAIL_ID,\n        CREATED_AT as APPROVER_CREATED_AT,\n        UPDATED_AT as APPROVER_UPDATED_AT\n    FROM FINALPROJECTPROD.L1_PREP.prep_approverdetails\n),\n\n-- Join userskills with approverdetails to calculate decision time\nfact_userskills AS (\n    SELECT\n        us.USER_SKILL_ID,\n        us.USER_ID,\n        us.SKILL_ID,\n        us.CERTIFICATE_ID,\n        us.PROJECT_EXPERIENCE_ID,\n        us.APPROVER_DETAIL_ID,\n        us.PROFICIENCY,\n        us.VERIFIED_NOT,\n        us.HACKER_RANK_SCORE,\n        DATEDIFF(DAY, ad.APPROVER_CREATED_AT, ad.APPROVER_UPDATED_AT) AS DECISION_TIME_DAYS\n    FROM prep_userSkills us\n    LEFT JOIN prep_approverdetails ad ON us.APPROVER_DETAIL_ID = ad.APPROVER_DETAIL_ID\n)\n\nSELECT * FROM fact_userskills", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.852114Z", "completed_at": "2024-04-13T06:06:02.859450Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.865029Z", "completed_at": "2024-04-13T06:06:02.865029Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.025401830673217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_users", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_users AS (\n\n    SELECT\n\n    *\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_users\n),\n\nprep_users_full_name AS (\n    SELECT\n        *,\n        \"FIRST_NAME\" || ' ' || \"LAST_NAME\" AS FULL_NAME\n    FROM\n        prep_users\n),\n\nprep_users_without_names AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        EMAIL,\n        ROLE,\n        DESIGNATION\n        \n    FROM\n        prep_users_full_name\n)\n\n\n\nSELECT * FROM prep_users_without_names", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_users"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.876490Z", "completed_at": "2024-04-13T06:06:02.891582Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.898303Z", "completed_at": "2024-04-13T06:06:02.898303Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.028066158294677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_certificate_on_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\ndim_approverdetails AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\ndim_certificates AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_certificates\n),\n\nfact_userskills_with_users AS (\n    SELECT\n        f.*,\n        u.DESIGNATION\n    FROM\n        FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills f\n    LEFT JOIN\n        dim_users u ON u.USER_ID = f.USER_ID\n),\n\nfact_userskills_with_approverdetails AS (\n    SELECT\n        f.*,\n        ad.STATUS\n    FROM\n        fact_userskills_with_users f\n    LEFT JOIN\n        dim_approverdetails ad ON ad.APPROVER_DETAIL_ID = f.APPROVER_DETAIL_ID\n),\n\ncertificate_counts_with_verified_and_pending AS (\n    SELECT\n        COALESCE(ucd.DESIGNATION, 'Unknown') AS DESIGNATION,\n        COUNT(DISTINCT f.CERTIFICATE_ID) AS TOTAL_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.CERTIFICATE_ID ELSE NULL END) AS VERIFIED_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.CERTIFICATE_ID ELSE NULL END) AS PENDING_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.CERTIFICATE_ID ELSE NULL END) AS REJECTED_CERTIFICATES,\n        (COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS \n        VERIFIED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS REJECTED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS PENDING_PERCENTAGE,\n        AVG(dc.VALIDITY_PERIOD_MONTHS) AS AVERAGE_VALIDITY_MONTHS\n    FROM\n        fact_userskills_with_approverdetails f\n    LEFT JOIN\n        dim_users ucd ON f.DESIGNATION = ucd.DESIGNATION\n    LEFT JOIN\n        dim_certificates dc ON f.CERTIFICATE_ID = dc.CERTIFICATE_ID\n    GROUP BY\n        COALESCE(ucd.DESIGNATION, 'Unknown')\n)\n\nSELECT \n    ccvp.DESIGNATION,\n    ccvp.TOTAL_CERTIFICATES,\n    ccvp.VERIFIED_CERTIFICATES,\n    ccvp.PENDING_CERTIFICATES,\n    ccvp.REJECTED_CERTIFICATES,\n    ccvp.VERIFIED_PERCENTAGE,\n    ccvp.PENDING_PERCENTAGE,\n    ccvp.REJECTED_PERCENTAGE,\n    ccvp.AVERAGE_VALIDITY_MONTHS\nFROM \n    certificate_counts_with_verified_and_pending ccvp", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.884702Z", "completed_at": "2024-04-13T06:06:02.892514Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.899278Z", "completed_at": "2024-04-13T06:06:02.899278Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.02898430824279785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_emp_count_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n\n    SELECT\n    \n        *\n\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\nuser_counts_by_designation AS (\n    SELECT\n        DESIGNATION,\n        COUNT(*) AS USER_COUNT,\n        SUM(CASE WHEN ROLE = 'admin' THEN 1 ELSE 0 END) AS ADMIN_COUNT\n    FROM\n        dim_users\n    GROUP BY\n        DESIGNATION\n)\n\nSELECT * FROM user_counts_by_designation\n\n-- users count on designation and admin counts", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.909487Z", "completed_at": "2024-04-13T06:06:02.926649Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.932935Z", "completed_at": "2024-04-13T06:06:02.932935Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.028708219528198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_project_exp_on_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\ndim_approverdetails AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\ndim_projectexperience AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_projectexperiences\n),\n\nfact_userskills_with_users AS (\n    SELECT\n        f.*,\n        u.DESIGNATION\n    FROM\n        FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills f\n    LEFT JOIN\n        dim_users u ON u.USER_ID = f.USER_ID\n),\n\nfact_userskills_with_approverdetails AS (\n    SELECT\n        f.*,\n        ad.STATUS\n    FROM\n        fact_userskills_with_users f\n    LEFT JOIN\n        dim_approverdetails ad ON ad.APPROVER_DETAIL_ID = f.APPROVER_DETAIL_ID\n),\n\nproject_experience_counts_with_verified_and_pending AS (\n    SELECT\n        COALESCE(ucd.DESIGNATION, 'Unknown') AS DESIGNATION,\n        COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID) AS TOTAL_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS PENDING_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS REJECTED_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS VERIFIED_PROJECT_EXPERIENCES,\n        AVG(DISTINCT pe.TOTAL_NO_OF_DAYS_IN_PROJECT) AS AVERAGE_DAYS_IN_PROJECT,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS PENDING_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS REJECTED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS VERIFIED_PERCENTAGE\n    FROM\n        fact_userskills_with_approverdetails f\n    LEFT JOIN\n        dim_users ucd ON f.DESIGNATION = ucd.DESIGNATION\n    LEFT JOIN\n        dim_projectexperience pe ON f.PROJECT_EXPERIENCE_ID = pe.PROJECT_EXPERIENCE_ID\n    GROUP BY\n        COALESCE(ucd.DESIGNATION, 'Unknown')\n)\n\nSELECT \n    pcvp.DESIGNATION,\n    pcvp.TOTAL_PROJECT_EXPERIENCES,\n    pcvp.PENDING_PROJECT_EXPERIENCES,\n    pcvp.REJECTED_PROJECT_EXPERIENCES,\n    pcvp.VERIFIED_PROJECT_EXPERIENCES,\n    pcvp.PENDING_PERCENTAGE,\n    pcvp.REJECTED_PERCENTAGE,\n    pcvp.VERIFIED_PERCENTAGE,\n    pcvp.AVERAGE_DAYS_IN_PROJECT\nFROM \n    project_experience_counts_with_verified_and_pending pcvp", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.919647Z", "completed_at": "2024-04-13T06:06:02.926826Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.933923Z", "completed_at": "2024-04-13T06:06:02.933923Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.029654979705810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_matrix", "compiled": true, "compiled_code": "\n\n-- Load user table\nWITH dim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n-- Load approval details table\ndim_approval_details AS (\n    SELECT\n        USER_ID,\n        STATUS\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Load fact table\nfact_userskills AS (\n    SELECT\n        USER_ID,\n        APPROVER_DETAIL_ID\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Right join fact and users\nfact_users_right_join_users AS (\n    SELECT\n        COALESCE(fu.USER_ID, du.USER_ID) AS USER_ID,\n        COALESCE(ad.STATUS, 'No Skill') AS STATUS\n    FROM dim_users du\n    LEFT JOIN fact_userskills fu ON du.USER_ID = fu.USER_ID\n    LEFT JOIN dim_approval_details ad ON du.USER_ID = ad.USER_ID\n),\n\n-- Count different statuses for non-skill users\nnon_skill_user_status_counts AS (\n    SELECT\n        fu.USER_ID,\n        SUM(CASE WHEN fu.STATUS = 'Approved' THEN 1 ELSE 0 END) AS total_approved_skills,\n        SUM(CASE WHEN fu.STATUS = 'Rejected' THEN 1 ELSE 0 END) AS total_rejected_skills,\n        SUM(CASE WHEN fu.STATUS = 'Pending' THEN 1 ELSE 0 END) AS total_pending_skills\n    FROM fact_users_right_join_users fu\n    WHERE fu.STATUS != 'No Skill'\n    GROUP BY fu.USER_ID\n)\n\n-- Final output: User ID, counts for each status category\nSELECT\n    du.USER_ID,\n    du.FULL_NAME,\n    du.DESIGNATION,\n    COALESCE(nsu.total_approved_skills, 0) AS total_approved_skills,\n    COALESCE(nsu.total_rejected_skills, 0) AS total_rejected_skills,\n    COALESCE(nsu.total_pending_skills, 0) AS total_pending_skills\nFROM\n    dim_users du\nLEFT JOIN\n    non_skill_user_status_counts nsu ON du.USER_ID = nsu.USER_ID\nORDER BY\n    du.USER_ID", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_matrix"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.942713Z", "completed_at": "2024-04-13T06:06:02.963943Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.969007Z", "completed_at": "2024-04-13T06:06:02.969007Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03051900863647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_not_verified", "compiled": true, "compiled_code": "\n\n-- Load userskills table\nWITH fact_userskills AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Load user table\ndim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n\ndim_approverdetails AS(\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Count verified distinct skills for each user\nverified_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS verified_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Count advanced skills for each user\nadvanced_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS advanced_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'advanced'\n    GROUP BY USER_ID\n),\n\n-- Count intermediate skills for each user\nintermediate_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS intermediate_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'intermediate'\n    GROUP BY USER_ID\n),\n\n-- Count beginner skills for each user\nbeginner_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS beginner_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'beginner'\n    GROUP BY USER_ID\n),\n\n-- Calculate average hacker rank score for verified skills for each user\naverage_hacker_rank_score AS (\n    SELECT\n        USER_ID,\n        AVG(HACKER_RANK_SCORE) AS average_hacker_rank_score_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Calculate average decision time for verified skills for each user\naverage_decision_time AS (\n    SELECT\n        USER_ID,\n        AVG(DECISION_TIME_DAYS) AS average_decision_time_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Load approverdetails table and calculate average rating for approved records\naverage_rating_approved AS (\n    SELECT\n        USER_ID,\n        AVG(RATING) AS average_rating_approved\n    FROM dim_approverdetails\n    WHERE STATUS = 'Rejected'\n    GROUP BY USER_ID\n),\n\n-- Final SELECT statement\nfinal_results AS (\n    SELECT \n        u.USER_ID,\n        u.FULL_NAME,\n        u.DESIGNATION,\n        COALESCE(vsc.verified_skill_count, 0) AS verified_skill_count,\n        COALESCE(asc.advanced_skill_count, 0) AS advanced_skill_count,\n        COALESCE(isc.intermediate_skill_count, 0) AS intermediate_skill_count,\n        COALESCE(bsc.beginner_skill_count, 0) AS beginner_skill_count,\n        COALESCE(ahrs.average_hacker_rank_score_verified, 0) AS average_hacker_rank_score_verified,\n        COALESCE(adt.average_decision_time_verified, 0) AS average_decision_time_verified,\n        COALESCE(ara.average_rating_approved, 0) AS average_rating_approved\n    FROM dim_users u\n    LEFT JOIN verified_skills_count vsc ON u.USER_ID = vsc.USER_ID\n    LEFT JOIN advanced_skills_count asc ON u.USER_ID = asc.USER_ID\n    LEFT JOIN intermediate_skills_count isc ON u.USER_ID = isc.USER_ID\n    LEFT JOIN beginner_skills_count bsc ON u.USER_ID = bsc.USER_ID\n    LEFT JOIN average_hacker_rank_score ahrs ON u.USER_ID = ahrs.USER_ID\n    LEFT JOIN average_decision_time adt ON u.USER_ID = adt.USER_ID\n    LEFT JOIN average_rating_approved ara ON u.USER_ID = ara.USER_ID\n)\n\n-- Output the final results\nSELECT * FROM final_results ORDER BY verified_skill_count DESC", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.952157Z", "completed_at": "2024-04-13T06:06:02.965988Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:02.970045Z", "completed_at": "2024-04-13T06:06:02.970045Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03153228759765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_verified", "compiled": true, "compiled_code": "\n\n-- Load userskills table\nWITH fact_userskills AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Load user table\ndim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n\ndim_approverdetails AS(\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Count verified distinct skills for each user\nverified_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS verified_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Count advanced skills for each user\nadvanced_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS advanced_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'advanced'\n    GROUP BY USER_ID\n),\n\n-- Count intermediate skills for each user\nintermediate_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS intermediate_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'intermediate'\n    GROUP BY USER_ID\n),\n\n-- Count beginner skills for each user\nbeginner_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS beginner_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'beginner'\n    GROUP BY USER_ID\n),\n\n-- Calculate average hacker rank score for verified skills for each user\naverage_hacker_rank_score AS (\n    SELECT\n        USER_ID,\n        AVG(HACKER_RANK_SCORE) AS average_hacker_rank_score_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Calculate average decision time for verified skills for each user\naverage_decision_time AS (\n    SELECT\n        USER_ID,\n        AVG(DECISION_TIME_DAYS) AS average_decision_time_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Load approverdetails table and calculate average rating for approved records\naverage_rating_approved AS (\n    SELECT\n        USER_ID,\n        AVG(RATING) AS average_rating_approved\n    FROM dim_approverdetails\n    WHERE STATUS = 'Approved'\n    GROUP BY USER_ID\n),\n\n-- Final SELECT statement\nfinal_results AS (\n    SELECT \n        u.USER_ID,\n        u.FULL_NAME,\n        u.DESIGNATION,\n        COALESCE(vsc.verified_skill_count, 0) AS verified_skill_count,\n        COALESCE(asc.advanced_skill_count, 0) AS advanced_skill_count,\n        COALESCE(isc.intermediate_skill_count, 0) AS intermediate_skill_count,\n        COALESCE(bsc.beginner_skill_count, 0) AS beginner_skill_count,\n        COALESCE(ahrs.average_hacker_rank_score_verified, 0) AS average_hacker_rank_score_verified,\n        COALESCE(adt.average_decision_time_verified, 0) AS average_decision_time_verified,\n        COALESCE(ara.average_rating_approved, 0) AS average_rating_approved\n    FROM dim_users u\n    LEFT JOIN verified_skills_count vsc ON u.USER_ID = vsc.USER_ID\n    LEFT JOIN advanced_skills_count asc ON u.USER_ID = asc.USER_ID\n    LEFT JOIN intermediate_skills_count isc ON u.USER_ID = isc.USER_ID\n    LEFT JOIN beginner_skills_count bsc ON u.USER_ID = bsc.USER_ID\n    LEFT JOIN average_hacker_rank_score ahrs ON u.USER_ID = ahrs.USER_ID\n    LEFT JOIN average_decision_time adt ON u.USER_ID = adt.USER_ID\n    LEFT JOIN average_rating_approved ara ON u.USER_ID = ara.USER_ID\n)\n\n-- Output the final results\nSELECT * FROM final_results ORDER BY verified_skill_count DESC", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.983306Z", "completed_at": "2024-04-13T06:06:03.009357Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.014269Z", "completed_at": "2024-04-13T06:06:03.014269Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.04059195518493652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_user_status", "compiled": true, "compiled_code": "\n\n-- Load user table\nWITH dim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n-- Load approval details table\ndim_approval_details AS (\n    SELECT\n        APPROVER_DETAIL_ID,\n        USER_ID,\n        STATUS\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Load fact table\nfact_userskills AS (\n    SELECT\n        USER_ID,\n        APPROVER_DETAIL_ID\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Right join fact and users\nfact_users_right_join_users AS (\n    SELECT\n        COALESCE(fu.USER_ID, du.USER_ID) AS USER_ID,\n        COALESCE(du.FULL_NAME, du.FULL_NAME) AS FULL_NAME,\n        COALESCE(ad.STATUS, 'No Skill') AS STATUS\n    FROM fact_userskills fu\n    LEFT JOIN dim_users du ON fu.USER_ID = du.USER_ID\n    LEFT JOIN dim_approval_details ad ON fu.APPROVER_DETAIL_ID = ad.APPROVER_DETAIL_ID\n),\n\n-- Count different statuses for non-skill users\nnon_skill_user_status_counts AS (\n    SELECT\n        fu.USER_ID,\n        SUM(CASE WHEN fu.STATUS = 'Approved' THEN 1 ELSE 0 END) AS total_approved_skills,\n        SUM(CASE WHEN fu.STATUS = 'Rejected' THEN 1 ELSE 0 END) AS total_rejected_skills,\n        SUM(CASE WHEN fu.STATUS = 'Pending' THEN 1 ELSE 0 END) AS total_pending_skills\n    FROM fact_users_right_join_users fu\n    WHERE fu.STATUS != 'No Skill'\n    GROUP BY fu.USER_ID\n)\n\n-- Final output: User ID, counts for each status category\nSELECT\n    du.USER_ID,\n    du.FULL_NAME,\n    du.DESIGNATION,\n    COALESCE(nsu.total_approved_skills, 0) AS total_approved_skills,\n    COALESCE(nsu.total_rejected_skills, 0) AS total_rejected_skills,\n    COALESCE(nsu.total_pending_skills, 0) AS total_pending_skills\nFROM\n    dim_users du\nLEFT JOIN\n    non_skill_user_status_counts nsu ON du.USER_ID = nsu.USER_ID\nORDER BY\n    du.USER_ID", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_user_status"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:02.989330Z", "completed_at": "2024-04-13T06:06:03.015260Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.020365Z", "completed_at": "2024-04-13T06:06:03.020365Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.04277372360229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_certificate_on_designation_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.8b404e7593", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.026260Z", "completed_at": "2024-04-13T06:06:03.043446Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.054522Z", "completed_at": "2024-04-13T06:06:03.054522Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.034432411193847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_AVERAGE_VALIDITY_MONTHS__0.0364d6ac0b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_VALIDITY_MONTHS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.046437Z", "completed_at": "2024-04-13T06:06:03.058676Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.064920Z", "completed_at": "2024-04-13T06:06:03.064920Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03282737731933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_PENDING_CERTIFICATES__0.b2f171dca9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.066047Z", "completed_at": "2024-04-13T06:06:03.079550Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.089455Z", "completed_at": "2024-04-13T06:06:03.089455Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.032799720764160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_PENDING_PERCENTAGE__100__0.c0cadffebd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.081534Z", "completed_at": "2024-04-13T06:06:03.092566Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.099241Z", "completed_at": "2024-04-13T06:06:03.099241Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03217053413391113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_REJECTED_CERTIFICATES__0.dcf04b508f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.100262Z", "completed_at": "2024-04-13T06:06:03.109579Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.118528Z", "completed_at": "2024-04-13T06:06:03.118528Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03317451477050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_REJECTED_PERCENTAGE__100__0.5fd632f09d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.119492Z", "completed_at": "2024-04-13T06:06:03.131489Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.136489Z", "completed_at": "2024-04-13T06:06:03.136489Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03166794776916504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_TOTAL_CERTIFICATES__0.5df5f528e6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.137490Z", "completed_at": "2024-04-13T06:06:03.150119Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.156094Z", "completed_at": "2024-04-13T06:06:03.156094Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03248119354248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_VERIFIED_CERTIFICATES__0.57c48d9e05", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.157153Z", "completed_at": "2024-04-13T06:06:03.169047Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.175007Z", "completed_at": "2024-04-13T06:06:03.175007Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03820228576660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_VERIFIED_PERCENTAGE__100__0.3fda5d0f25", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.176101Z", "completed_at": "2024-04-13T06:06:03.196916Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.207912Z", "completed_at": "2024-04-13T06:06:03.207912Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03913402557373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_certificate_on_designation_DESIGNATION.b9c3760438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.200910Z", "completed_at": "2024-04-13T06:06:03.210176Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.219113Z", "completed_at": "2024-04-13T06:06:03.219113Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.028968334197998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_emp_count_designation_DESIGNATION__Sr_Software_Engineer__Solution_Enabler__Architect__Software_Engineer__Principal_Architect__Consultant.9e7f55e82d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Sr. Software Engineer','Solution Enabler','Architect','Software Engineer','Principal Architect','Consultant'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.223364Z", "completed_at": "2024-04-13T06:06:03.237648Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.248069Z", "completed_at": "2024-04-13T06:06:03.248069Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03293466567993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_emp_count_designation_ADMIN_COUNT__0.cc1a6bee51", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADMIN_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.238717Z", "completed_at": "2024-04-13T06:06:03.253036Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.257573Z", "completed_at": "2024-04-13T06:06:03.257573Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03225374221801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_emp_count_designation_USER_COUNT__0.bebb7f7880", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not USER_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.258531Z", "completed_at": "2024-04-13T06:06:03.268881Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.273659Z", "completed_at": "2024-04-13T06:06:03.274582Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.022696256637573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_emp_count_designation_DESIGNATION.5197c24207", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.279414Z", "completed_at": "2024-04-13T06:06:03.298197Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.300177Z", "completed_at": "2024-04-13T06:06:03.300177Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.030610322952270508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_project_exp_on_designation_DESIGNATION__Sr_Software_Engineer__Solution_Enabler__Architect__Software_Engineer__Principal_Architect__Consultant.04d641ff71", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Sr. Software Engineer','Solution Enabler','Architect','Software Engineer','Principal Architect','Consultant'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.289318Z", "completed_at": "2024-04-13T06:06:03.302175Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.307651Z", "completed_at": "2024-04-13T06:06:03.307651Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.02263188362121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_AVERAGE_DAYS_IN_PROJECT__0.d89a21a82f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DAYS_IN_PROJECT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.316109Z", "completed_at": "2024-04-13T06:06:03.335519Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.339441Z", "completed_at": "2024-04-13T06:06:03.339441Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.033060550689697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_PENDING_PERCENTAGE__100__0.4a6121415e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.326139Z", "completed_at": "2024-04-13T06:06:03.338444Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.342800Z", "completed_at": "2024-04-13T06:06:03.342800Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.024145841598510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_PENDING_PROJECT_EXPERIENCES__0.ff285ff03a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.354167Z", "completed_at": "2024-04-13T06:06:03.369980Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.374969Z", "completed_at": "2024-04-13T06:06:03.374969Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.030209064483642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_REJECTED_PERCENTAGE__100__0.9360df6ad4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.362882Z", "completed_at": "2024-04-13T06:06:03.373914Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.381361Z", "completed_at": "2024-04-13T06:06:03.381361Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.031174421310424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_REJECTED_PROJECT_EXPERIENCES__0.868ac28bf2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.389331Z", "completed_at": "2024-04-13T06:06:03.406098Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.409397Z", "completed_at": "2024-04-13T06:06:03.409397Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.02924656867980957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_TOTAL_PROJECT_EXPERIENCES__0.aa728ff80c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.399097Z", "completed_at": "2024-04-13T06:06:03.407106Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.413493Z", "completed_at": "2024-04-13T06:06:03.413493Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.028127670288085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_VERIFIED_PERCENTAGE__100__0.4d11a1704f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.424706Z", "completed_at": "2024-04-13T06:06:03.440401Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.442412Z", "completed_at": "2024-04-13T06:06:03.442412Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.026812076568603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_VERIFIED_PROJECT_EXPERIENCES__0.bf2929f971", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.432538Z", "completed_at": "2024-04-13T06:06:03.447309Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.452170Z", "completed_at": "2024-04-13T06:06:03.452170Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03322029113769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_project_exp_on_designation_DESIGNATION.777529f08c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.455831Z", "completed_at": "2024-04-13T06:06:03.473818Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.475834Z", "completed_at": "2024-04-13T06:06:03.475834Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03058600425720215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_skills_not_verified_DESIGNATION__Principal_Architect__Architect__Solution_Enabler__Consultant__Software_Engineer__Sr_Software_Engineer.3ed9572e30", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Principal Architect','Architect','Solution Enabler','Consultant','Software Engineer','Sr. Software Engineer'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.467740Z", "completed_at": "2024-04-13T06:06:03.475834Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.485647Z", "completed_at": "2024-04-13T06:06:03.485647Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.02290177345275879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_ADVANCED_SKILL_COUNT__0.09f791781f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADVANCED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.491746Z", "completed_at": "2024-04-13T06:06:03.510066Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.517066Z", "completed_at": "2024-04-13T06:06:03.517066Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.032294511795043945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_DECISION_TIME_VERIFIED__0.b5c8abcebb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DECISION_TIME_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.503897Z", "completed_at": "2024-04-13T06:06:03.515961Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.520985Z", "completed_at": "2024-04-13T06:06:03.520985Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.02408123016357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_HACKER_RANK_SCORE_VERIFIED__0.c05d7a301d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_HACKER_RANK_SCORE_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.531311Z", "completed_at": "2024-04-13T06:06:03.550052Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.555964Z", "completed_at": "2024-04-13T06:06:03.555964Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03308534622192383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_RATING_APPROVED__0.61ddde6a43", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_RATING_APPROVED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.539326Z", "completed_at": "2024-04-13T06:06:03.551036Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.557068Z", "completed_at": "2024-04-13T06:06:03.557068Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.029886484146118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_BEGINNER_SKILL_COUNT__0.a280471172", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not BEGINNER_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.570607Z", "completed_at": "2024-04-13T06:06:03.586559Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.592559Z", "completed_at": "2024-04-13T06:06:03.592559Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03257894515991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_INTERMEDIATE_SKILL_COUNT__0.838e9ce726", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not INTERMEDIATE_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.577559Z", "completed_at": "2024-04-13T06:06:03.587611Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.595560Z", "completed_at": "2024-04-13T06:06:03.595560Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03292274475097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_VERIFIED_SKILL_COUNT__0.709550bff2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.616862Z", "completed_at": "2024-04-13T06:06:03.622873Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.629109Z", "completed_at": "2024-04-13T06:06:03.629109Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.02769613265991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_FULL_NAME.feb88f4e44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.608889Z", "completed_at": "2024-04-13T06:06:03.624879Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.630471Z", "completed_at": "2024-04-13T06:06:03.630471Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.029702186584472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_DESIGNATION.9b8688f9da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.650019Z", "completed_at": "2024-04-13T06:06:03.662453Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.668450Z", "completed_at": "2024-04-13T06:06:03.668450Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03298759460449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.unique_mart_skills_not_verified_USER_ID.fbd4f6a0ed", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    USER_ID as unique_field,\n    count(*) as n_records\n\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere USER_ID is not null\ngroup by USER_ID\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.642642Z", "completed_at": "2024-04-13T06:06:03.664461Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.669531Z", "completed_at": "2024-04-13T06:06:03.669531Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.03595376014709473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_USER_ID.b708f15498", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect USER_ID\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere USER_ID is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.690126Z", "completed_at": "2024-04-13T06:06:03.699112Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.704177Z", "completed_at": "2024-04-13T06:06:03.704177Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.027622222900390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_ADVANCED_SKILL_COUNT__0.d9599dabff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADVANCED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.683117Z", "completed_at": "2024-04-13T06:06:03.700188Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.705137Z", "completed_at": "2024-04-13T06:06:03.705137Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.032059669494628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_skills_verified_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.471694dcdc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.718758Z", "completed_at": "2024-04-13T06:06:03.733897Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.737931Z", "completed_at": "2024-04-13T06:06:03.737931Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.026193618774414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_DECISION_TIME_VERIFIED__0.2744a3851a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DECISION_TIME_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.726186Z", "completed_at": "2024-04-13T06:06:03.740929Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.747348Z", "completed_at": "2024-04-13T06:06:03.747348Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.035611867904663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_HACKER_RANK_SCORE_VERIFIED__0.eb2f0f8109", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_HACKER_RANK_SCORE_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.751453Z", "completed_at": "2024-04-13T06:06:03.764065Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.775257Z", "completed_at": "2024-04-13T06:06:03.775257Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.033895015716552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_RATING_APPROVED__0.097c6fa894", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_RATING_APPROVED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.765061Z", "completed_at": "2024-04-13T06:06:03.775257Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.783741Z", "completed_at": "2024-04-13T06:06:03.783741Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.02858901023864746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_BEGINNER_SKILL_COUNT__0.abf4fd5194", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not BEGINNER_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.790201Z", "completed_at": "2024-04-13T06:06:03.802017Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.813812Z", "completed_at": "2024-04-13T06:06:03.813812Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.030768871307373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_INTERMEDIATE_SKILL_COUNT__0.31f0751448", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not INTERMEDIATE_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.804018Z", "completed_at": "2024-04-13T06:06:03.818809Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.822809Z", "completed_at": "2024-04-13T06:06:03.822809Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03344535827636719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_VERIFIED_SKILL_COUNT__0.d1ee27dde7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.823901Z", "completed_at": "2024-04-13T06:06:03.835509Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.839894Z", "completed_at": "2024-04-13T06:06:03.839894Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.02897334098815918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_verified_DESIGNATION.6fe7de72e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.840902Z", "completed_at": "2024-04-13T06:06:03.853804Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.864867Z", "completed_at": "2024-04-13T06:06:03.864867Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.030405521392822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_verified_FULL_NAME.86cd96e248", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.856803Z", "completed_at": "2024-04-13T06:06:03.868911Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.873867Z", "completed_at": "2024-04-13T06:06:03.873867Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.024265766143798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_user_status_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.a0e513c408", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.876167Z", "completed_at": "2024-04-13T06:06:03.900002Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.903978Z", "completed_at": "2024-04-13T06:06:03.903978Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.03512072563171387, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_APPROVED_SKILLS__0.2964a74f85", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_APPROVED_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.891515Z", "completed_at": "2024-04-13T06:06:03.902975Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.908977Z", "completed_at": "2024-04-13T06:06:03.908977Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.023143768310546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_PENDING_SKILLS__0.e307af9712", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_PENDING_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.918814Z", "completed_at": "2024-04-13T06:06:03.935713Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.938623Z", "completed_at": "2024-04-13T06:06:03.938623Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.026079177856445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_REJECTED_SKILLS__0.cdcf55e1f9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_REJECTED_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.925881Z", "completed_at": "2024-04-13T06:06:03.939686Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.945437Z", "completed_at": "2024-04-13T06:06:03.945437Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.0314183235168457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_DESIGNATION.84b016f529", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.952261Z", "completed_at": "2024-04-13T06:06:03.970034Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.975152Z", "completed_at": "2024-04-13T06:06:03.975152Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.032067060470581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_FULL_NAME.d7e7d1a746", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.963021Z", "completed_at": "2024-04-13T06:06:03.972042Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:03.975152Z", "completed_at": "2024-04-13T06:06:03.975152Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.02190399169921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_USER_ID.2cf9e2df7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect USER_ID\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere USER_ID is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T06:06:03.986145Z", "completed_at": "2024-04-13T06:06:03.998714Z"}, {"name": "execute", "started_at": "2024-04-13T06:06:04.004706Z", "completed_at": "2024-04-13T06:06:04.004706Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.021589994430541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.unique_mart_user_status_USER_ID.14605e161f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    USER_ID as unique_field,\n    count(*) as n_records\n\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere USER_ID is not null\ngroup by USER_ID\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 3.3819568157196045, "args": {"vars": {}, "strict_mode": false, "static": false, "static_parser": true, "enable_legacy_logger": false, "write_json": true, "populate_cache": true, "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "compile": true, "log_path": "D:\\Programing\\JMAN\\Final Project\\FinalProject-DSP\\Model\\DBT\\logs", "select": [], "indirect_selection": "eager", "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "partial_parse_file_diff": true, "empty_catalog": false, "favor_state": false, "cache_selected_only": false, "project_dir": "D:\\Programing\\JMAN\\Final Project\\FinalProject-DSP\\Model\\DBT", "quiet": false, "macro_debugging": false, "printer_width": 80, "defer": false, "introspect": true, "version_check": true, "use_colors": true, "log_format_file": "debug", "log_format": "default", "exclude": [], "log_level": "info", "log_level_file": "debug", "show_resource_report": false, "profiles_dir": "C:\\Users\\karma\\.dbt", "partial_parse": true, "invocation_command": "dbt ", "print": true, "which": "generate"}}