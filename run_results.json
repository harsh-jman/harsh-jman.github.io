{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-13T17:07:38.124607Z", "invocation_id": "45f94bd4-8e3c-4b8a-b6c8-189bb39cb8aa", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.472824Z", "completed_at": "2024-04-13T17:07:36.478835Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.484814Z", "completed_at": "2024-04-13T17:07:36.484814Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.02410292625427246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_certificates", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n  SELECT\n        CAST(\"_id\" AS VARCHAR) AS CERTIFICATE_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"certificateId\" AS INT) AS CERTIFICATE_ID_NUM,\n        CAST(\"certificateName\" AS VARCHAR) AS CERTIFICATE_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        CAST(\"issuingAuthority\" AS VARCHAR) AS ISSUING_AUTHORITY,\n        TO_TIMESTAMP(\"issueDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS ISSUE_DATE,\n        CAST(\"validityPeriodMonths\" AS INT) AS VALIDITY_PERIOD_MONTHS,\n        CAST(\"supportedDocumentLink\" AS VARCHAR) AS SUPPORTED_DOCUMENT_LINK,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS UPDATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.CERTIFICATES\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_certificates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.468817Z", "completed_at": "2024-04-13T17:07:36.481816Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.486818Z", "completed_at": "2024-04-13T17:07:36.486818Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.02800917625427246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_approverdetails", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        \"_id\" AS APPROVER_DETAIL_ID,\n        \"userId\" AS USER_ID,\n        \"approverUserId\" AS APPROVER_USER_ID,\n        \"userSkillId\" AS USER_SKILL_ID,\n        \"status\" AS STATUS,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS UPDATED_AT,\n        CASE WHEN \"comments\" IS NOT NULL THEN \"comments\" ELSE NULL END AS COMMENTS,\n        TRY_CAST(\"rating\" AS FLOAT) AS RATING -- Try to cast rating to FLOAT\n    FROM\n        FINALPROJECTPROD.RAW.APPROVERDETAILS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_approverdetails"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.502877Z", "completed_at": "2024-04-13T17:07:36.520680Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.524692Z", "completed_at": "2024-04-13T17:07:36.524692Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03104233741760254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_projectexperiences", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS PROJECT_EXPERIENCE_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"projectName\" AS VARCHAR) AS PROJECT_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        TO_TIMESTAMP(\"startDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS START_DATE,\n        TO_TIMESTAMP(\"endDate\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF6Z') AS END_DATE,\n        CAST(\"supportedDocumentLink\" AS VARCHAR) AS SUPPORTED_DOCUMENT_LINK\n    FROM\n        FINALPROJECTPROD.RAW.PROJECTEXPERIENCES\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_projectexperiences"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.511147Z", "completed_at": "2024-04-13T17:07:36.525696Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.534350Z", "completed_at": "2024-04-13T17:07:36.534350Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.039507150650024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_skills", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS SKILL_ID,\n        CAST(\"skillName\" AS VARCHAR) AS SKILL_NAME,\n        CAST(\"description\" AS VARCHAR) AS DESCRIPTION,\n        CASE \n            WHEN \"createdAt\" IS NOT NULL THEN TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD HH24:MI:SS.FF3')\n            ELSE NULL \n        END AS CREATED_AT,\n        CASE \n            WHEN \"updatedAt\" IS NOT NULL THEN TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD HH24:MI:SS.FF3')\n            ELSE NULL \n        END AS UPDATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.SKILLS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_skills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.543875Z", "completed_at": "2024-04-13T17:07:36.561747Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.568729Z", "completed_at": "2024-04-13T17:07:36.568729Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03337502479553223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_users", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n    SELECT\n        CAST(\"_id\" AS VARCHAR) AS USER_ID,\n        CAST(\"firstName\" AS VARCHAR) AS FIRST_NAME,\n        CAST(\"lastName\" AS VARCHAR) AS LAST_NAME,\n        CAST(\"email\" AS VARCHAR) AS EMAIL,\n        CAST(\"role\" AS VARCHAR) AS ROLE,\n        CAST(\"forcePasswordReset\" AS BOOLEAN) AS FORCE_PASSWORD_RESET,\n        CAST(\"isActive\" AS BOOLEAN) AS IS_ACTIVE,\n        CAST(\"designation\" AS VARCHAR) AS DESIGNATION,\n        CASE WHEN \"updatedAt\" = '' THEN NULL ELSE TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD HH24:MI:SS.FF3') END AS UPDATED_AT,\n        CASE WHEN \"createdAt\" = '' THEN NULL ELSE TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD HH24:MI:SS.FF3') END AS CREATED_AT,\n    FROM\n        FINALPROJECTPROD.RAW.USERS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_users"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.554681Z", "completed_at": "2024-04-13T17:07:36.566678Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.572627Z", "completed_at": "2024-04-13T17:07:36.572627Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.023947477340698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.prep_userskills", "compiled": true, "compiled_code": "\n\nWITH required_fields_cast AS (\n  SELECT\n        CAST(\"_id\" AS VARCHAR) AS USER_SKILL_ID,\n        CAST(\"userId\" AS VARCHAR) AS USER_ID,\n        CAST(\"skillId\" AS VARCHAR) AS SKILL_ID,\n        CASE WHEN \"certificateId\" IS NOT NULL THEN CAST(\"certificateId\" AS VARCHAR) ELSE NULL END AS CERTIFICATE_ID,\n        CAST(\"proficiency\" AS VARCHAR) AS PROFICIENCY,\n        CAST(\"status\" AS VARCHAR) AS STATUS,\n        CAST(\"hackerRankScore\" AS INT) AS HACKER_RANK_SCORE,\n        TO_TIMESTAMP(\"createdAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF3Z') AS CREATED_AT,\n        TO_TIMESTAMP(\"updatedAt\", 'YYYY-MM-DD\"T\"HH24:MI:SS.FF3Z') AS UPDATED_AT,\n        CASE WHEN \"projectExperienceId\" IS NOT NULL THEN CAST(\"projectExperienceId\" AS VARCHAR) ELSE NULL END AS PROJECT_EXPERIENCE_ID,\n        CAST(\"approverDetailId\" AS VARCHAR) AS APPROVER_DETAIL_ID\n    FROM\n        FINALPROJECTPROD.RAW.USERSKILLS\n)\n\nSELECT * FROM required_fields_cast", "relation_name": "FINALPROJECTPROD.L1_PREP.prep_userskills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.584857Z", "completed_at": "2024-04-13T17:07:36.600806Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.603731Z", "completed_at": "2024-04-13T17:07:36.603731Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.029754638671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_certificates", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_certificates AS (\n\n    SELECT\n    \n        CERTIFICATE_ID,\n        USER_ID,\n        CERTIFICATE_ID_NUM,\n        ISSUING_AUTHORITY,\n        ISSUE_DATE,\n        VALIDITY_PERIOD_MONTHS\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_certificates\n)\n\nSELECT * FROM prep_certificates", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_certificates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.591870Z", "completed_at": "2024-04-13T17:07:36.602736Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.608618Z", "completed_at": "2024-04-13T17:07:36.608618Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.02703237533569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_approverdetails", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_approverdetails AS (\n\n    SELECT\n\n        APPROVER_DETAIL_ID,\n        USER_ID,\n        APPROVER_USER_ID,\n        STATUS,\n        RATING,\n        CREATED_AT,\n        UPDATED_AT\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_approverdetails\n),\n\nprep_approverdetails_duration AS (\n    \n    SELECT\n\n        *,\n        DATEDIFF(DAY, CREATED_AT, UPDATED_AT) AS DECISION_TIME_DAY\n    \n    FROM prep_approverdetails\n\n)\n\nSELECT * FROM prep_approverdetails_duration", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.620439Z", "completed_at": "2024-04-13T17:07:36.635456Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.638445Z", "completed_at": "2024-04-13T17:07:36.638445Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.02635812759399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_projectexperiences", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_projectexperiences AS (\n\n    SELECT\n        PROJECT_EXPERIENCE_ID,\n        USER_ID,\n        PROJECT_NAME,\n        START_DATE,\n        END_DATE\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_projectexperiences\n),\n\nprep_projectexperiences_total_days AS (\n    \n    SELECT\n    \n    *,\n    DATEDIFF(DAY, START_DATE, END_DATE) + 1 AS TOTAL_NO_OF_DAYS_IN_PROJECT\n\n    FROM prep_projectexperiences\n)\n\nSELECT * FROM prep_projectexperiences_total_days", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_projectexperiences"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.627454Z", "completed_at": "2024-04-13T17:07:36.639467Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.644876Z", "completed_at": "2024-04-13T17:07:36.644876Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.03145313262939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_skills", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_skills AS (\n\n    SELECT\n\n    SKILL_ID,\n    SKILL_NAME,\n    CREATED_AT,\n    UPDATED_AT\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_skills\n)\n\nSELECT * FROM prep_skills", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_skills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.653904Z", "completed_at": "2024-04-13T17:07:36.672607Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.675610Z", "completed_at": "2024-04-13T17:07:36.675610Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03074336051940918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.dim_users", "compiled": true, "compiled_code": "\n\nWITH\n\nprep_users AS (\n\n    SELECT\n\n    *\n\n    FROM FINALPROJECTPROD.L1_PREP.prep_users\n),\n\nprep_users_full_name AS (\n    SELECT\n        *,\n        \"FIRST_NAME\" || ' ' || \"LAST_NAME\" AS FULL_NAME\n    FROM\n        prep_users\n),\n\nprep_users_without_names AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        EMAIL,\n        ROLE,\n        DESIGNATION\n        \n    FROM\n        prep_users_full_name\n)\n\n\n\nSELECT * FROM prep_users_without_names", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.dim_users"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.665607Z", "completed_at": "2024-04-13T17:07:36.680608Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.689657Z", "completed_at": "2024-04-13T17:07:36.689657Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.03164815902709961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.fact_userskills", "compiled": true, "compiled_code": "\n\nWITH\n\n-- Load userskills table\nprep_userSkills AS (\n    SELECT\n        USER_SKILL_ID,\n        USER_ID,\n        SKILL_ID,\n        CERTIFICATE_ID,\n        PROJECT_EXPERIENCE_ID,\n        APPROVER_DETAIL_ID,\n        PROFICIENCY,\n        STATUS as VERIFIED_NOT,\n        HACKER_RANK_SCORE\n    FROM FINALPROJECTPROD.L1_PREP.prep_userskills\n),\n\n-- Load approverdetails table\nprep_approverdetails AS (\n    SELECT\n        APPROVER_DETAIL_ID,\n        CREATED_AT as APPROVER_CREATED_AT,\n        UPDATED_AT as APPROVER_UPDATED_AT\n    FROM FINALPROJECTPROD.L1_PREP.prep_approverdetails\n),\n\n-- Join userskills with approverdetails to calculate decision time\nfact_userskills AS (\n    SELECT\n        us.USER_SKILL_ID,\n        us.USER_ID,\n        us.SKILL_ID,\n        us.CERTIFICATE_ID,\n        us.PROJECT_EXPERIENCE_ID,\n        us.APPROVER_DETAIL_ID,\n        us.PROFICIENCY,\n        us.VERIFIED_NOT,\n        us.HACKER_RANK_SCORE,\n        DATEDIFF(DAY, ad.APPROVER_CREATED_AT, ad.APPROVER_UPDATED_AT) AS DECISION_TIME_DAYS\n    FROM prep_userSkills us\n    LEFT JOIN prep_approverdetails ad ON us.APPROVER_DETAIL_ID = ad.APPROVER_DETAIL_ID\n)\n\nSELECT * FROM fact_userskills", "relation_name": "FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.693850Z", "completed_at": "2024-04-13T17:07:36.714867Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.719878Z", "completed_at": "2024-04-13T17:07:36.719878Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03792285919189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_emp_count_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n\n    SELECT\n    \n        *\n\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\nuser_counts_by_designation AS (\n    SELECT\n        DESIGNATION,\n        COUNT(*) AS USER_COUNT,\n        SUM(CASE WHEN ROLE = 'admin' THEN 1 ELSE 0 END) AS ADMIN_COUNT\n    FROM\n        dim_users\n    GROUP BY\n        DESIGNATION\n)\n\nSELECT * FROM user_counts_by_designation\n\n-- users count on designation and admin counts", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.706987Z", "completed_at": "2024-04-13T17:07:36.718902Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.725568Z", "completed_at": "2024-04-13T17:07:36.725568Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.026380538940429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_certificate_on_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\ndim_approverdetails AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\ndim_certificates AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_certificates\n),\n\nfact_userskills_with_users AS (\n    SELECT\n        f.*,\n        u.DESIGNATION\n    FROM\n        FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills f\n    LEFT JOIN\n        dim_users u ON u.USER_ID = f.USER_ID\n),\n\nfact_userskills_with_approverdetails AS (\n    SELECT\n        f.*,\n        ad.STATUS\n    FROM\n        fact_userskills_with_users f\n    LEFT JOIN\n        dim_approverdetails ad ON ad.APPROVER_DETAIL_ID = f.APPROVER_DETAIL_ID\n),\n\ncertificate_counts_with_verified_and_pending AS (\n    SELECT\n        COALESCE(ucd.DESIGNATION, 'Unknown') AS DESIGNATION,\n        COUNT(DISTINCT f.CERTIFICATE_ID) AS TOTAL_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.CERTIFICATE_ID ELSE NULL END) AS VERIFIED_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.CERTIFICATE_ID ELSE NULL END) AS PENDING_CERTIFICATES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.CERTIFICATE_ID ELSE NULL END) AS REJECTED_CERTIFICATES,\n        (COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS \n        VERIFIED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS REJECTED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.CERTIFICATE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.CERTIFICATE_ID), 0) AS PENDING_PERCENTAGE,\n        AVG(dc.VALIDITY_PERIOD_MONTHS) AS AVERAGE_VALIDITY_MONTHS\n    FROM\n        fact_userskills_with_approverdetails f\n    LEFT JOIN\n        dim_users ucd ON f.DESIGNATION = ucd.DESIGNATION\n    LEFT JOIN\n        dim_certificates dc ON f.CERTIFICATE_ID = dc.CERTIFICATE_ID\n    GROUP BY\n        COALESCE(ucd.DESIGNATION, 'Unknown')\n)\n\nSELECT \n    ccvp.DESIGNATION,\n    ccvp.TOTAL_CERTIFICATES,\n    ccvp.VERIFIED_CERTIFICATES,\n    ccvp.PENDING_CERTIFICATES,\n    ccvp.REJECTED_CERTIFICATES,\n    ccvp.VERIFIED_PERCENTAGE,\n    ccvp.PENDING_PERCENTAGE,\n    ccvp.REJECTED_PERCENTAGE,\n    ccvp.AVERAGE_VALIDITY_MONTHS\nFROM \n    certificate_counts_with_verified_and_pending ccvp", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.738276Z", "completed_at": "2024-04-13T17:07:36.757274Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.760361Z", "completed_at": "2024-04-13T17:07:36.760361Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.034426212310791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_project_exp_on_designation", "compiled": true, "compiled_code": "\n\nWITH\n\ndim_users AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\ndim_approverdetails AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\ndim_projectexperience AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_projectexperiences\n),\n\nfact_userskills_with_users AS (\n    SELECT\n        f.*,\n        u.DESIGNATION\n    FROM\n        FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills f\n    LEFT JOIN\n        dim_users u ON u.USER_ID = f.USER_ID\n),\n\nfact_userskills_with_approverdetails AS (\n    SELECT\n        f.*,\n        ad.STATUS\n    FROM\n        fact_userskills_with_users f\n    LEFT JOIN\n        dim_approverdetails ad ON ad.APPROVER_DETAIL_ID = f.APPROVER_DETAIL_ID\n),\n\nproject_experience_counts_with_verified_and_pending AS (\n    SELECT\n        COALESCE(ucd.DESIGNATION, 'Unknown') AS DESIGNATION,\n        COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID) AS TOTAL_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS PENDING_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS REJECTED_PROJECT_EXPERIENCES,\n        COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) AS VERIFIED_PROJECT_EXPERIENCES,\n        AVG(DISTINCT pe.TOTAL_NO_OF_DAYS_IN_PROJECT) AS AVERAGE_DAYS_IN_PROJECT,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Pending' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS PENDING_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.STATUS = 'Rejected' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS REJECTED_PERCENTAGE,\n        (COUNT(DISTINCT CASE WHEN f.VERIFIED_NOT = 'Verified' THEN f.PROJECT_EXPERIENCE_ID ELSE NULL END) * 100.0) / NULLIF(COUNT(DISTINCT f.PROJECT_EXPERIENCE_ID), 0) AS VERIFIED_PERCENTAGE\n    FROM\n        fact_userskills_with_approverdetails f\n    LEFT JOIN\n        dim_users ucd ON f.DESIGNATION = ucd.DESIGNATION\n    LEFT JOIN\n        dim_projectexperience pe ON f.PROJECT_EXPERIENCE_ID = pe.PROJECT_EXPERIENCE_ID\n    GROUP BY\n        COALESCE(ucd.DESIGNATION, 'Unknown')\n)\n\nSELECT \n    pcvp.DESIGNATION,\n    pcvp.TOTAL_PROJECT_EXPERIENCES,\n    pcvp.PENDING_PROJECT_EXPERIENCES,\n    pcvp.REJECTED_PROJECT_EXPERIENCES,\n    pcvp.VERIFIED_PROJECT_EXPERIENCES,\n    pcvp.PENDING_PERCENTAGE,\n    pcvp.REJECTED_PERCENTAGE,\n    pcvp.VERIFIED_PERCENTAGE,\n    pcvp.AVERAGE_DAYS_IN_PROJECT\nFROM \n    project_experience_counts_with_verified_and_pending pcvp", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.749276Z", "completed_at": "2024-04-13T17:07:36.760361Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.767610Z", "completed_at": "2024-04-13T17:07:36.767610Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.035334110260009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_matrix", "compiled": true, "compiled_code": "\n\n-- Load user table\nWITH dim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n-- Load approval details table\ndim_approval_details AS (\n    SELECT\n        USER_ID,\n        STATUS\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Load fact table\nfact_userskills AS (\n    SELECT\n        USER_ID,\n        APPROVER_DETAIL_ID\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Right join fact and users\nfact_users_right_join_users AS (\n    SELECT\n        COALESCE(fu.USER_ID, du.USER_ID) AS USER_ID,\n        COALESCE(ad.STATUS, 'No Skill') AS STATUS\n    FROM dim_users du\n    LEFT JOIN fact_userskills fu ON du.USER_ID = fu.USER_ID\n    LEFT JOIN dim_approval_details ad ON du.USER_ID = ad.USER_ID\n),\n\n-- Count different statuses for non-skill users\nnon_skill_user_status_counts AS (\n    SELECT\n        fu.USER_ID,\n        SUM(CASE WHEN fu.STATUS = 'Approved' THEN 1 ELSE 0 END) AS total_approved_skills,\n        SUM(CASE WHEN fu.STATUS = 'Rejected' THEN 1 ELSE 0 END) AS total_rejected_skills,\n        SUM(CASE WHEN fu.STATUS = 'Pending' THEN 1 ELSE 0 END) AS total_pending_skills\n    FROM fact_users_right_join_users fu\n    WHERE fu.STATUS != 'No Skill'\n    GROUP BY fu.USER_ID\n)\n\n-- Final output: User ID, counts for each status category\nSELECT\n    du.USER_ID,\n    du.FULL_NAME,\n    du.DESIGNATION,\n    COALESCE(nsu.total_approved_skills, 0) AS total_approved_skills,\n    COALESCE(nsu.total_rejected_skills, 0) AS total_rejected_skills,\n    COALESCE(nsu.total_pending_skills, 0) AS total_pending_skills\nFROM\n    dim_users du\nLEFT JOIN\n    non_skill_user_status_counts nsu ON du.USER_ID = nsu.USER_ID\nORDER BY\n    du.USER_ID", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_matrix"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.782609Z", "completed_at": "2024-04-13T17:07:36.806916Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.817641Z", "completed_at": "2024-04-13T17:07:36.817641Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.04802584648132324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_not_verified", "compiled": true, "compiled_code": "\n\n-- Load userskills table\nWITH fact_userskills AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Load user table\ndim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n\ndim_approverdetails AS(\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Count verified distinct skills for each user\nverified_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS verified_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Count advanced skills for each user\nadvanced_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS advanced_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'advanced'\n    GROUP BY USER_ID\n),\n\n-- Count intermediate skills for each user\nintermediate_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS intermediate_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'intermediate'\n    GROUP BY USER_ID\n),\n\n-- Count beginner skills for each user\nbeginner_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS beginner_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified' AND PROFICIENCY = 'beginner'\n    GROUP BY USER_ID\n),\n\n-- Calculate average hacker rank score for verified skills for each user\naverage_hacker_rank_score AS (\n    SELECT\n        USER_ID,\n        AVG(HACKER_RANK_SCORE) AS average_hacker_rank_score_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Calculate average decision time for verified skills for each user\naverage_decision_time AS (\n    SELECT\n        USER_ID,\n        AVG(DECISION_TIME_DAYS) AS average_decision_time_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Not Verified'\n    GROUP BY USER_ID\n),\n\n-- Load approverdetails table and calculate average rating for approved records\naverage_rating_approved AS (\n    SELECT\n        USER_ID,\n        AVG(RATING) AS average_rating_approved\n    FROM dim_approverdetails\n    WHERE STATUS = 'Rejected'\n    GROUP BY USER_ID\n),\n\n-- Final SELECT statement\nfinal_results AS (\n    SELECT \n        u.USER_ID,\n        u.FULL_NAME,\n        u.DESIGNATION,\n        COALESCE(vsc.verified_skill_count, 0) AS verified_skill_count,\n        COALESCE(asc.advanced_skill_count, 0) AS advanced_skill_count,\n        COALESCE(isc.intermediate_skill_count, 0) AS intermediate_skill_count,\n        COALESCE(bsc.beginner_skill_count, 0) AS beginner_skill_count,\n        COALESCE(ahrs.average_hacker_rank_score_verified, 0) AS average_hacker_rank_score_verified,\n        COALESCE(adt.average_decision_time_verified, 0) AS average_decision_time_verified,\n        COALESCE(ara.average_rating_approved, 0) AS average_rating_approved\n    FROM dim_users u\n    LEFT JOIN verified_skills_count vsc ON u.USER_ID = vsc.USER_ID\n    LEFT JOIN advanced_skills_count asc ON u.USER_ID = asc.USER_ID\n    LEFT JOIN intermediate_skills_count isc ON u.USER_ID = isc.USER_ID\n    LEFT JOIN beginner_skills_count bsc ON u.USER_ID = bsc.USER_ID\n    LEFT JOIN average_hacker_rank_score ahrs ON u.USER_ID = ahrs.USER_ID\n    LEFT JOIN average_decision_time adt ON u.USER_ID = adt.USER_ID\n    LEFT JOIN average_rating_approved ara ON u.USER_ID = ara.USER_ID\n)\n\n-- Output the final results\nSELECT * FROM final_results ORDER BY verified_skill_count DESC", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.797916Z", "completed_at": "2024-04-13T17:07:36.819659Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.826936Z", "completed_at": "2024-04-13T17:07:36.826936Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.05473017692565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_skills_verified", "compiled": true, "compiled_code": "\n\n-- Load userskills table\nWITH fact_userskills AS (\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Load user table\ndim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n\ndim_approverdetails AS(\n    SELECT\n        *\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Count verified distinct skills for each user\nverified_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS verified_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Count advanced skills for each user\nadvanced_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS advanced_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'advanced'\n    GROUP BY USER_ID\n),\n\n-- Count intermediate skills for each user\nintermediate_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS intermediate_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'intermediate'\n    GROUP BY USER_ID\n),\n\n-- Count beginner skills for each user\nbeginner_skills_count AS (\n    SELECT\n        USER_ID,\n        COUNT(DISTINCT SKILL_ID) AS beginner_skill_count\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified' AND PROFICIENCY = 'beginner'\n    GROUP BY USER_ID\n),\n\n-- Calculate average hacker rank score for verified skills for each user\naverage_hacker_rank_score AS (\n    SELECT\n        USER_ID,\n        AVG(HACKER_RANK_SCORE) AS average_hacker_rank_score_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Calculate average decision time for verified skills for each user\naverage_decision_time AS (\n    SELECT\n        USER_ID,\n        AVG(DECISION_TIME_DAYS) AS average_decision_time_verified\n    FROM fact_userskills\n    WHERE VERIFIED_NOT = 'Verified'\n    GROUP BY USER_ID\n),\n\n-- Load approverdetails table and calculate average rating for approved records\naverage_rating_approved AS (\n    SELECT\n        USER_ID,\n        AVG(RATING) AS average_rating_approved\n    FROM dim_approverdetails\n    WHERE STATUS = 'Approved'\n    GROUP BY USER_ID\n),\n\n-- Final SELECT statement\nfinal_results AS (\n    SELECT \n        u.USER_ID,\n        u.FULL_NAME,\n        u.DESIGNATION,\n        COALESCE(vsc.verified_skill_count, 0) AS verified_skill_count,\n        COALESCE(asc.advanced_skill_count, 0) AS advanced_skill_count,\n        COALESCE(isc.intermediate_skill_count, 0) AS intermediate_skill_count,\n        COALESCE(bsc.beginner_skill_count, 0) AS beginner_skill_count,\n        COALESCE(ahrs.average_hacker_rank_score_verified, 0) AS average_hacker_rank_score_verified,\n        COALESCE(adt.average_decision_time_verified, 0) AS average_decision_time_verified,\n        COALESCE(ara.average_rating_approved, 0) AS average_rating_approved\n    FROM dim_users u\n    LEFT JOIN verified_skills_count vsc ON u.USER_ID = vsc.USER_ID\n    LEFT JOIN advanced_skills_count asc ON u.USER_ID = asc.USER_ID\n    LEFT JOIN intermediate_skills_count isc ON u.USER_ID = isc.USER_ID\n    LEFT JOIN beginner_skills_count bsc ON u.USER_ID = bsc.USER_ID\n    LEFT JOIN average_hacker_rank_score ahrs ON u.USER_ID = ahrs.USER_ID\n    LEFT JOIN average_decision_time adt ON u.USER_ID = adt.USER_ID\n    LEFT JOIN average_rating_approved ara ON u.USER_ID = ara.USER_ID\n)\n\n-- Output the final results\nSELECT * FROM final_results ORDER BY verified_skill_count DESC", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.840248Z", "completed_at": "2024-04-13T17:07:36.865589Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.875587Z", "completed_at": "2024-04-13T17:07:36.875587Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.05203747749328613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytical_eng.mart_user_status", "compiled": true, "compiled_code": "\n\n-- Load user table\nWITH dim_users AS (\n    SELECT\n        USER_ID,\n        FULL_NAME,\n        DESIGNATION\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_users\n),\n\n-- Load approval details table\ndim_approval_details AS (\n    SELECT\n        APPROVER_DETAIL_ID,\n        USER_ID,\n        STATUS\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.dim_approverdetails\n),\n\n-- Load fact table\nfact_userskills AS (\n    SELECT\n        USER_ID,\n        APPROVER_DETAIL_ID\n    FROM FINALPROJECTPROD.L2_TRANSFORMATION.fact_userskills\n),\n\n-- Right join fact and users\nfact_users_right_join_users AS (\n    SELECT\n        COALESCE(fu.USER_ID, du.USER_ID) AS USER_ID,\n        COALESCE(du.FULL_NAME, du.FULL_NAME) AS FULL_NAME,\n        COALESCE(ad.STATUS, 'No Skill') AS STATUS\n    FROM fact_userskills fu\n    LEFT JOIN dim_users du ON fu.USER_ID = du.USER_ID\n    LEFT JOIN dim_approval_details ad ON fu.APPROVER_DETAIL_ID = ad.APPROVER_DETAIL_ID\n),\n\n-- Count different statuses for non-skill users\nnon_skill_user_status_counts AS (\n    SELECT\n        fu.USER_ID,\n        SUM(CASE WHEN fu.STATUS = 'Approved' THEN 1 ELSE 0 END) AS total_approved_skills,\n        SUM(CASE WHEN fu.STATUS = 'Rejected' THEN 1 ELSE 0 END) AS total_rejected_skills,\n        SUM(CASE WHEN fu.STATUS = 'Pending' THEN 1 ELSE 0 END) AS total_pending_skills\n    FROM fact_users_right_join_users fu\n    WHERE fu.STATUS != 'No Skill'\n    GROUP BY fu.USER_ID\n)\n\n-- Final output: User ID, counts for each status category\nSELECT\n    du.USER_ID,\n    du.FULL_NAME,\n    du.DESIGNATION,\n    COALESCE(nsu.total_approved_skills, 0) AS total_approved_skills,\n    COALESCE(nsu.total_rejected_skills, 0) AS total_rejected_skills,\n    COALESCE(nsu.total_pending_skills, 0) AS total_pending_skills\nFROM\n    dim_users du\nLEFT JOIN\n    non_skill_user_status_counts nsu ON du.USER_ID = nsu.USER_ID\nORDER BY\n    du.USER_ID", "relation_name": "FINALPROJECTPROD.L3_DATA_MART.mart_user_status"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.854941Z", "completed_at": "2024-04-13T17:07:36.868588Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.876586Z", "completed_at": "2024-04-13T17:07:36.876586Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.03639388084411621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_emp_count_designation_DESIGNATION__Sr_Software_Engineer__Solution_Enabler__Architect__Software_Engineer__Principal_Architect__Consultant.9e7f55e82d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Sr. Software Engineer','Solution Enabler','Architect','Software Engineer','Principal Architect','Consultant'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.909161Z", "completed_at": "2024-04-13T17:07:36.921594Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.929176Z", "completed_at": "2024-04-13T17:07:36.929176Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.042887210845947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_emp_count_designation_USER_COUNT__0.bebb7f7880", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not USER_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.898172Z", "completed_at": "2024-04-13T17:07:36.924593Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.932175Z", "completed_at": "2024-04-13T17:07:36.932175Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.04797983169555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_emp_count_designation_ADMIN_COUNT__0.cc1a6bee51", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADMIN_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.950936Z", "completed_at": "2024-04-13T17:07:36.976837Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.985171Z", "completed_at": "2024-04-13T17:07:36.985171Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.047987937927246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_emp_count_designation_DESIGNATION.5197c24207", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_emp_count_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:36.958876Z", "completed_at": "2024-04-13T17:07:36.983171Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:36.993283Z", "completed_at": "2024-04-13T17:07:36.993283Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.054186105728149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_certificate_on_designation_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.8b404e7593", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.008813Z", "completed_at": "2024-04-13T17:07:37.023489Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.040153Z", "completed_at": "2024-04-13T17:07:37.040153Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.0415346622467041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_AVERAGE_VALIDITY_MONTHS__0.0364d6ac0b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_VALIDITY_MONTHS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.026449Z", "completed_at": "2024-04-13T17:07:37.042159Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.052872Z", "completed_at": "2024-04-13T17:07:37.052872Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.05006885528564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_PENDING_CERTIFICATES__0.b2f171dca9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.060955Z", "completed_at": "2024-04-13T17:07:37.075458Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.094131Z", "completed_at": "2024-04-13T17:07:37.094131Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.048438310623168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_PENDING_PERCENTAGE__100__0.c0cadffebd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.077706Z", "completed_at": "2024-04-13T17:07:37.098330Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.108323Z", "completed_at": "2024-04-13T17:07:37.108323Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.0420379638671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_REJECTED_CERTIFICATES__0.dcf04b508f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.122491Z", "completed_at": "2024-04-13T17:07:37.140263Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.159909Z", "completed_at": "2024-04-13T17:07:37.159909Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.04958534240722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_REJECTED_PERCENTAGE__100__0.5fd632f09d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.142207Z", "completed_at": "2024-04-13T17:07:37.169944Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.176944Z", "completed_at": "2024-04-13T17:07:37.176944Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.05694079399108887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_TOTAL_CERTIFICATES__0.5df5f528e6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.178054Z", "completed_at": "2024-04-13T17:07:37.200554Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.216488Z", "completed_at": "2024-04-13T17:07:37.216488Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.051541805267333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_VERIFIED_CERTIFICATES__0.57c48d9e05", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_CERTIFICATES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.206552Z", "completed_at": "2024-04-13T17:07:37.226631Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.238599Z", "completed_at": "2024-04-13T17:07:37.238599Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.06021237373352051, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_certificate_on_designation_VERIFIED_PERCENTAGE__100__0.3fda5d0f25", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.239467Z", "completed_at": "2024-04-13T17:07:37.258468Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.274466Z", "completed_at": "2024-04-13T17:07:37.274466Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.04400062561035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_certificate_on_designation_DESIGNATION.b9c3760438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_certificate_on_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.263473Z", "completed_at": "2024-04-13T17:07:37.281974Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.288972Z", "completed_at": "2024-04-13T17:07:37.288972Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.043653011322021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_project_exp_on_designation_DESIGNATION__Sr_Software_Engineer__Solution_Enabler__Architect__Software_Engineer__Principal_Architect__Consultant.04d641ff71", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Sr. Software Engineer','Solution Enabler','Architect','Software Engineer','Principal Architect','Consultant'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.289986Z", "completed_at": "2024-04-13T17:07:37.307112Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.322113Z", "completed_at": "2024-04-13T17:07:37.323106Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.04013347625732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_AVERAGE_DAYS_IN_PROJECT__0.d89a21a82f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DAYS_IN_PROJECT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.311119Z", "completed_at": "2024-04-13T17:07:37.332279Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.344496Z", "completed_at": "2024-04-13T17:07:37.344496Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.043984413146972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_PENDING_PERCENTAGE__100__0.4a6121415e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.336294Z", "completed_at": "2024-04-13T17:07:37.350144Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.356153Z", "completed_at": "2024-04-13T17:07:37.356153Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.029755592346191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_PENDING_PROJECT_EXPERIENCES__0.ff285ff03a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not PENDING_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.360137Z", "completed_at": "2024-04-13T17:07:37.373240Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.386014Z", "completed_at": "2024-04-13T17:07:37.386014Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.034963130950927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_REJECTED_PERCENTAGE__100__0.9360df6ad4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.375239Z", "completed_at": "2024-04-13T17:07:37.390014Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.394065Z", "completed_at": "2024-04-13T17:07:37.394065Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.028138399124145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_REJECTED_PROJECT_EXPERIENCES__0.868ac28bf2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not REJECTED_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.400379Z", "completed_at": "2024-04-13T17:07:37.412377Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.425378Z", "completed_at": "2024-04-13T17:07:37.425378Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03536415100097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_TOTAL_PROJECT_EXPERIENCES__0.aa728ff80c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.418377Z", "completed_at": "2024-04-13T17:07:37.431587Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.437596Z", "completed_at": "2024-04-13T17:07:37.437596Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.030195951461791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_VERIFIED_PERCENTAGE__100__0.4d11a1704f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PERCENTAGE <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.441586Z", "completed_at": "2024-04-13T17:07:37.456877Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.470891Z", "completed_at": "2024-04-13T17:07:37.470891Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03727841377258301, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_project_exp_on_designation_VERIFIED_PROJECT_EXPERIENCES__0.bf2929f971", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_PROJECT_EXPERIENCES >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.460878Z", "completed_at": "2024-04-13T17:07:37.475894Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.482877Z", "completed_at": "2024-04-13T17:07:37.482877Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.030992507934570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_project_exp_on_designation_DESIGNATION.777529f08c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_project_exp_on_designation\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.487878Z", "completed_at": "2024-04-13T17:07:37.509878Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.514637Z", "completed_at": "2024-04-13T17:07:37.514637Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03771066665649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_skills_not_verified_DESIGNATION__Principal_Architect__Architect__Solution_Enabler__Consultant__Software_Engineer__Sr_Software_Engineer.3ed9572e30", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Principal Architect','Architect','Solution Enabler','Consultant','Software Engineer','Sr. Software Engineer'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.501879Z", "completed_at": "2024-04-13T17:07:37.515673Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.522128Z", "completed_at": "2024-04-13T17:07:37.522128Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.026755094528198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_ADVANCED_SKILL_COUNT__0.09f791781f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADVANCED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.531377Z", "completed_at": "2024-04-13T17:07:37.553050Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.557047Z", "completed_at": "2024-04-13T17:07:37.557047Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03624463081359863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_DECISION_TIME_VERIFIED__0.b5c8abcebb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DECISION_TIME_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.543029Z", "completed_at": "2024-04-13T17:07:37.556031Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.561849Z", "completed_at": "2024-04-13T17:07:37.561849Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.02787041664123535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_HACKER_RANK_SCORE_VERIFIED__0.c05d7a301d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_HACKER_RANK_SCORE_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.573801Z", "completed_at": "2024-04-13T17:07:37.587804Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.600801Z", "completed_at": "2024-04-13T17:07:37.600801Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.0369112491607666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_AVERAGE_RATING_APPROVED__0.61ddde6a43", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_RATING_APPROVED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.588808Z", "completed_at": "2024-04-13T17:07:37.601806Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.609801Z", "completed_at": "2024-04-13T17:07:37.609801Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.043546438217163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_BEGINNER_SKILL_COUNT__0.a280471172", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not BEGINNER_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.619403Z", "completed_at": "2024-04-13T17:07:37.640391Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.648392Z", "completed_at": "2024-04-13T17:07:37.649392Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.04140186309814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_INTERMEDIATE_SKILL_COUNT__0.838e9ce726", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not INTERMEDIATE_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.631404Z", "completed_at": "2024-04-13T17:07:37.642391Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.650391Z", "completed_at": "2024-04-13T17:07:37.650391Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.026111602783203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_not_verified_VERIFIED_SKILL_COUNT__0.709550bff2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.665398Z", "completed_at": "2024-04-13T17:07:37.682392Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.688491Z", "completed_at": "2024-04-13T17:07:37.688491Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.032984018325805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_DESIGNATION.9b8688f9da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.672482Z", "completed_at": "2024-04-13T17:07:37.686425Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.693406Z", "completed_at": "2024-04-13T17:07:37.693406Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.0379793643951416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_FULL_NAME.feb88f4e44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.705380Z", "completed_at": "2024-04-13T17:07:37.717392Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.733132Z", "completed_at": "2024-04-13T17:07:37.733132Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.037758588790893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_not_verified_USER_ID.b708f15498", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect USER_ID\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere USER_ID is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.719390Z", "completed_at": "2024-04-13T17:07:37.734132Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.741147Z", "completed_at": "2024-04-13T17:07:37.741147Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.040720462799072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.unique_mart_skills_not_verified_USER_ID.fbd4f6a0ed", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    USER_ID as unique_field,\n    count(*) as n_records\n\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_not_verified\nwhere USER_ID is not null\ngroup by USER_ID\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.751133Z", "completed_at": "2024-04-13T17:07:37.764857Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.776971Z", "completed_at": "2024-04-13T17:07:37.776971Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.04091978073120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_skills_verified_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.471694dcdc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.766853Z", "completed_at": "2024-04-13T17:07:37.776971Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.785123Z", "completed_at": "2024-04-13T17:07:37.785123Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.028880596160888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_ADVANCED_SKILL_COUNT__0.d9599dabff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not ADVANCED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.799141Z", "completed_at": "2024-04-13T17:07:37.820290Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.826492Z", "completed_at": "2024-04-13T17:07:37.826492Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.0421442985534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_DECISION_TIME_VERIFIED__0.2744a3851a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_DECISION_TIME_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.809136Z", "completed_at": "2024-04-13T17:07:37.823291Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.826492Z", "completed_at": "2024-04-13T17:07:37.826492Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.03917813301086426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_HACKER_RANK_SCORE_VERIFIED__0.eb2f0f8109", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_HACKER_RANK_SCORE_VERIFIED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.843530Z", "completed_at": "2024-04-13T17:07:37.864580Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.867577Z", "completed_at": "2024-04-13T17:07:37.867577Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.031302452087402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_AVERAGE_RATING_APPROVED__0.097c6fa894", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not AVERAGE_RATING_APPROVED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.855240Z", "completed_at": "2024-04-13T17:07:37.868574Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.874583Z", "completed_at": "2024-04-13T17:07:37.874583Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.0363163948059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_BEGINNER_SKILL_COUNT__0.abf4fd5194", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not BEGINNER_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.882683Z", "completed_at": "2024-04-13T17:07:37.891882Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.905026Z", "completed_at": "2024-04-13T17:07:37.905026Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.03253769874572754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_INTERMEDIATE_SKILL_COUNT__0.31f0751448", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not INTERMEDIATE_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.897024Z", "completed_at": "2024-04-13T17:07:37.910009Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.917097Z", "completed_at": "2024-04-13T17:07:37.917097Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.03556656837463379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_skills_verified_VERIFIED_SKILL_COUNT__0.d1ee27dde7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not VERIFIED_SKILL_COUNT >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.918362Z", "completed_at": "2024-04-13T17:07:37.927558Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.935558Z", "completed_at": "2024-04-13T17:07:37.935558Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.033113956451416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_verified_DESIGNATION.6fe7de72e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.937054Z", "completed_at": "2024-04-13T17:07:37.950776Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.960763Z", "completed_at": "2024-04-13T17:07:37.960763Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.03706073760986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_skills_verified_FULL_NAME.86cd96e248", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_skills_verified\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.954419Z", "completed_at": "2024-04-13T17:07:37.966586Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:37.972584Z", "completed_at": "2024-04-13T17:07:37.972584Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.02696061134338379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.accepted_values_mart_user_status_DESIGNATION__Software_Engineer__Sr_Software_Engineer__Solution_Enabler__Consultant__Architect__Principal_Architect.a0e513c408", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        DESIGNATION as value_field,\n        count(*) as n_records\n\n    from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n    group by DESIGNATION\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Software Engineer','Sr. Software Engineer','Solution Enabler','Consultant','Architect','Principal Architect'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.982156Z", "completed_at": "2024-04-13T17:07:37.991164Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:38.004654Z", "completed_at": "2024-04-13T17:07:38.004654Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.03308463096618652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_APPROVED_SKILLS__0.2964a74f85", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_APPROVED_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:37.996639Z", "completed_at": "2024-04-13T17:07:38.009812Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:38.017092Z", "completed_at": "2024-04-13T17:07:38.017092Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.0364384651184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_PENDING_SKILLS__0.e307af9712", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_PENDING_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:38.018045Z", "completed_at": "2024-04-13T17:07:38.027889Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:38.036336Z", "completed_at": "2024-04-13T17:07:38.036336Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.02962207794189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.dbt_utils_accepted_range_mart_user_status_TOTAL_REJECTED_SKILLS__0.cdcf55e1f9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from FINALPROJECTPROD.L3_DATA_MART.mart_user_status\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not TOTAL_REJECTED_SKILLS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:38.041375Z", "completed_at": "2024-04-13T17:07:38.054506Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:38.066518Z", "completed_at": "2024-04-13T17:07:38.066518Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.036177873611450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_DESIGNATION.84b016f529", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DESIGNATION\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere DESIGNATION is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:38.057915Z", "completed_at": "2024-04-13T17:07:38.068437Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:38.075225Z", "completed_at": "2024-04-13T17:07:38.075225Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.02498769760131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_FULL_NAME.d7e7d1a746", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect FULL_NAME\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere FULL_NAME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:38.083817Z", "completed_at": "2024-04-13T17:07:38.098620Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:38.109617Z", "completed_at": "2024-04-13T17:07:38.109617Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.034575462341308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.not_null_mart_user_status_USER_ID.2cf9e2df7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect USER_ID\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere USER_ID is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T17:07:38.100616Z", "completed_at": "2024-04-13T17:07:38.110888Z"}, {"name": "execute", "started_at": "2024-04-13T17:07:38.116687Z", "completed_at": "2024-04-13T17:07:38.116687Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.023587942123413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytical_eng.unique_mart_user_status_USER_ID.14605e161f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    USER_ID as unique_field,\n    count(*) as n_records\n\nfrom FINALPROJECTPROD.L3_DATA_MART.mart_user_status\nwhere USER_ID is not null\ngroup by USER_ID\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 6.692654371261597, "args": {"log_path": "D:\\Programing\\JMAN\\Final Project\\FinalProject-DSP\\Model\\DBT\\logs", "static": false, "show_resource_report": false, "printer_width": 80, "exclude": [], "version_check": true, "cache_selected_only": false, "empty_catalog": false, "invocation_command": "dbt ", "quiet": false, "partial_parse": true, "favor_state": false, "which": "generate", "warn_error_options": {"include": [], "exclude": []}, "defer": false, "profiles_dir": "C:\\Users\\karma\\.dbt", "use_colors": true, "populate_cache": true, "log_format": "default", "project_dir": "D:\\Programing\\JMAN\\Final Project\\FinalProject-DSP\\Model\\DBT", "log_level": "info", "macro_debugging": false, "static_parser": true, "introspect": true, "print": true, "write_json": true, "vars": {}, "log_level_file": "debug", "log_format_file": "debug", "send_anonymous_usage_stats": true, "compile": true, "use_colors_file": true, "partial_parse_file_diff": true, "select": [], "indirect_selection": "eager", "enable_legacy_logger": false, "strict_mode": false, "log_file_max_bytes": 10485760}}